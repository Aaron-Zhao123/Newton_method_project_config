|Newton_method
x_value[0] => x_value[0].IN2
x_value[1] => x_value[1].IN2
operand_two[0] => operand_two[0].IN2
operand_two[1] => operand_two[1].IN2
subtrahend_one[0] => subtrahend_one[0].IN1
subtrahend_one[1] => subtrahend_one[1].IN1
minuend_one[0] => minuend_one[0].IN1
minuend_one[1] => minuend_one[1].IN1
numerator_one[0] => numerator_one[0].IN1
numerator_one[1] => numerator_one[1].IN1
divisor_one[0] => divisor_one[0].IN1
divisor_one[1] => divisor_one[1].IN1
subtrahend_two[0] => subtrahend_two[0].IN1
subtrahend_two[1] => subtrahend_two[1].IN1
minuend_two[0] => minuend_two[0].IN1
minuend_two[1] => minuend_two[1].IN1
mul_three[0] => mul_three[0].IN2
mul_three[1] => mul_three[1].IN2
subtrahend_three[0] => subtrahend_three[0].IN1
subtrahend_three[1] => subtrahend_three[1].IN1
minuend_three[0] => minuend_three[0].IN1
minuend_three[1] => minuend_three[1].IN1
mul_four[0] => mul_four[0].IN1
mul_four[1] => mul_four[1].IN1
operand_four[0] => operand_four[0].IN1
operand_four[1] => operand_four[1].IN1
numerator_two[0] => numerator_two[0].IN1
numerator_two[1] => numerator_two[1].IN1
divisor_two[0] => divisor_two[0].IN1
divisor_two[1] => divisor_two[1].IN1
subtrahend_four[0] => subtrahend_four[0].IN1
subtrahend_four[1] => subtrahend_four[1].IN1
minuend_four[0] => minuend_four[0].IN1
minuend_four[1] => minuend_four[1].IN1
clk => clk.IN10
product_one[0] <= Multiplier:mul1.port2
product_one[1] <= Multiplier:mul1.port2
product_two[0] <= Multiplier:mul2.port2
product_two[1] <= Multiplier:mul2.port2
diff_one[0] <= subtraction:sub_one.port3
diff_one[1] <= subtraction:sub_one.port3
quotient_one[0] <= On_line_divider:divider.port6
quotient_one[1] <= On_line_divider:divider.port6
diff_two[0] <= subtraction_two:sub_two.port3
diff_two[1] <= subtraction_two:sub_two.port3
product_three[0] <= Multiplier_stage_two:mul3.port2
product_three[1] <= Multiplier_stage_two:mul3.port2
diff_three[0] <= subtraction_three:sub_three.port3
diff_three[1] <= subtraction_three:sub_three.port3
product_four[0] <= Multiplier_four:mul4.port2
product_four[1] <= Multiplier_four:mul4.port2
quotient_two[0] <= On_line_divider_stage_two:divider2.port6
quotient_two[1] <= On_line_divider_stage_two:divider2.port6
diff_four[0] <= subtraction_four:sub_four.port3
diff_four[1] <= subtraction_four:sub_four.port3
In_vd_mul_one => In_vd_mul_one.IN1
Out_rd_mul_one => Out_rd_mul_one.IN1
In_rd_mul_one <= Multiplier:mul1.port9
Out_vd_mul_one <= Multiplier:mul1.port10
In_vd_sub_one => In_vd_sub_one.IN1
Out_rd_sub_one => Out_rd_sub_one.IN1
In_rd_sub_one <= subtraction:sub_one.port5
Out_vd_sub_one <= subtraction:sub_one.port6
In_vd_mul_two => In_vd_mul_two.IN1
Out_rd_mul_two => Out_rd_mul_two.IN1
In_rd_mul_two <= Multiplier:mul2.port9
Out_vd_mul_two <= Multiplier:mul2.port10
In_vd_div_one => In_vd_div_one.IN1
Out_rd_div_one => Out_rd_div_one.IN1
In_rd_div_one <= On_line_divider:divider.port10
Out_vd_div_one <= On_line_divider:divider.port11
In_vd_sub_two => In_vd_sub_two.IN1
Out_rd_sub_two => Out_rd_sub_two.IN1
In_rd_sub_two <= subtraction_two:sub_two.port5
Out_vd_sub_two <= subtraction_two:sub_two.port6
In_vd_mul_three => In_vd_mul_three.IN1
Out_rd_mul_three => Out_rd_mul_three.IN1
In_rd_mul_three <= Multiplier_stage_two:mul3.port9
Out_vd_mul_three <= Multiplier_stage_two:mul3.port10
In_vd_sub_three => In_vd_sub_three.IN1
Out_rd_sub_three => Out_rd_sub_three.IN1
In_rd_sub_three <= subtraction_three:sub_three.port5
Out_vd_sub_three <= subtraction_three:sub_three.port6
In_vd_mul_four => In_vd_mul_four.IN1
Out_rd_mul_four => Out_rd_mul_four.IN1
In_rd_mul_four <= Multiplier_four:mul4.port9
Out_vd_mul_four <= Multiplier_four:mul4.port10
In_vd_div_two => In_vd_div_two.IN1
Out_rd_div_two => Out_rd_div_two.IN1
In_rd_div_two <= On_line_divider_stage_two:divider2.port10
Out_vd_div_two <= On_line_divider_stage_two:divider2.port11
In_vd_sub_four => In_vd_sub_four.IN1
Out_rd_sub_four => Out_rd_sub_four.IN1
In_rd_sub_four <= subtraction_four:sub_four.port5
Out_vd_sub_four <= subtraction_four:sub_four.port6


|Newton_method|Multiplier:mul1
x[0] => x[0].IN2
x[1] => x[1].IN2
y[0] => y[0].IN2
y[1] => y[1].IN2
p[0] <= p[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p[1] <= p[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => clk.IN7
STATE[0] <= STATE[0].DB_MAX_OUTPUT_PORT_TYPE
STATE[1] <= STATE[1].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[0] <= computation_cycle[0].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[1] <= computation_cycle[1].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[2] <= computation_cycle[2].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[3] <= computation_cycle[3].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[4] <= computation_cycle[4].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[5] <= computation_cycle[5].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[6] <= computation_cycle[6].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[0] <= cnt_master[0].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[1] <= cnt_master[1].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[2] <= cnt_master[2].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[3] <= cnt_master[3].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[4] <= cnt_master[4].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[5] <= cnt_master[5].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[6] <= cnt_master[6].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[7] <= cnt_master[7].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[8] <= cnt_master[8].DB_MAX_OUTPUT_PORT_TYPE
In_vd => always1.IN1
Out_rd => always1.IN1
In_rd <= In_rd~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_vd <= Out_vd~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|counter:main_counter
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
clk => cnt[0]~reg0.CLK
clk => cnt[1]~reg0.CLK
clk => cnt[2]~reg0.CLK
clk => cnt[3]~reg0.CLK
clk => cnt[4]~reg0.CLK
clk => cnt[5]~reg0.CLK
clk => cnt[6]~reg0.CLK
clk => cnt[7]~reg0.CLK
clk => cnt[8]~reg0.CLK
cnt[0] <= cnt[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[1] <= cnt[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[2] <= cnt[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[3] <= cnt[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[4] <= cnt[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[5] <= cnt[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[6] <= cnt[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[7] <= cnt[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[8] <= cnt[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => cnt[0]~reg0.ENA
write_enable => cnt[1]~reg0.ENA
write_enable => cnt[2]~reg0.ENA
write_enable => cnt[3]~reg0.ENA
write_enable => cnt[4]~reg0.ENA
write_enable => cnt[5]~reg0.ENA
write_enable => cnt[6]~reg0.ENA
write_enable => cnt[7]~reg0.ENA
write_enable => cnt[8]~reg0.ENA


|Newton_method|Multiplier:mul1|computation_control_mul:FSM
cnt_master[0] => Equal0.IN1
cnt_master[0] => Equal1.IN8
cnt_master[0] => Equal3.IN1
cnt_master[1] => Equal0.IN0
cnt_master[1] => Equal1.IN7
cnt_master[1] => Equal3.IN0
cnt_master[2] => computation_cycle.DATAB
cnt_master[2] => Add1.IN14
cnt_master[2] => computation_cycle.DATAA
cnt_master[2] => Mux9.IN5
cnt_master[2] => Equal0.IN8
cnt_master[2] => Equal1.IN0
cnt_master[3] => computation_cycle.DATAB
cnt_master[3] => Add1.IN13
cnt_master[3] => computation_cycle.DATAA
cnt_master[3] => Mux8.IN5
cnt_master[3] => Equal0.IN7
cnt_master[3] => Equal1.IN6
cnt_master[4] => computation_cycle.DATAB
cnt_master[4] => Add1.IN12
cnt_master[4] => computation_cycle.DATAA
cnt_master[4] => Mux7.IN5
cnt_master[4] => Equal0.IN6
cnt_master[4] => Equal1.IN5
cnt_master[5] => computation_cycle.DATAB
cnt_master[5] => Add1.IN11
cnt_master[5] => computation_cycle.DATAA
cnt_master[5] => Mux6.IN5
cnt_master[5] => Equal0.IN5
cnt_master[5] => Equal1.IN4
cnt_master[6] => computation_cycle.DATAB
cnt_master[6] => Add1.IN10
cnt_master[6] => computation_cycle.DATAA
cnt_master[6] => Mux5.IN5
cnt_master[6] => Equal0.IN4
cnt_master[6] => Equal1.IN3
cnt_master[7] => computation_cycle.DATAB
cnt_master[7] => Add1.IN9
cnt_master[7] => computation_cycle.DATAA
cnt_master[7] => Mux4.IN5
cnt_master[7] => Equal0.IN3
cnt_master[7] => Equal1.IN2
cnt_master[8] => computation_cycle.DATAB
cnt_master[8] => Add1.IN8
cnt_master[8] => computation_cycle.DATAA
cnt_master[8] => Mux3.IN5
cnt_master[8] => Equal0.IN2
cnt_master[8] => Equal1.IN1
clk => computation_cycle[0]~reg0.CLK
clk => computation_cycle[1]~reg0.CLK
clk => computation_cycle[2]~reg0.CLK
clk => computation_cycle[3]~reg0.CLK
clk => computation_cycle[4]~reg0.CLK
clk => computation_cycle[5]~reg0.CLK
clk => computation_cycle[6]~reg0.CLK
clk => STATE[0]~reg0.CLK
clk => STATE[1]~reg0.CLK
clk => we~reg0.CLK
clk => stay~3.DATAIN
computation_cycle[0] <= computation_cycle[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[1] <= computation_cycle[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[2] <= computation_cycle[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[3] <= computation_cycle[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[4] <= computation_cycle[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[5] <= computation_cycle[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[6] <= computation_cycle[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_for_input <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
we <= we~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[0] <= STATE[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[1] <= STATE[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => stay.OUTPUTSELECT
write_enable => stay.OUTPUTSELECT
write_enable => computation_cycle[0]~reg0.ENA
write_enable => computation_cycle[1]~reg0.ENA
write_enable => computation_cycle[2]~reg0.ENA
write_enable => computation_cycle[3]~reg0.ENA
write_enable => computation_cycle[4]~reg0.ENA
write_enable => computation_cycle[5]~reg0.ENA
write_enable => computation_cycle[6]~reg0.ENA
write_enable => STATE[0]~reg0.ENA
write_enable => STATE[1]~reg0.ENA
write_enable => we~reg0.ENA


|Newton_method|Multiplier:mul1|generate_CA_REG_mul:CA_REG
computation_cycles[0] => addr[0].IN1
computation_cycles[1] => addr[1].IN1
computation_cycles[2] => addr[2].IN1
computation_cycles[3] => addr[3].IN1
computation_cycles[4] => addr[4].IN1
computation_cycles[5] => addr[5].IN1
computation_cycles[6] => addr[6].IN1
x_input[0] => tmp_write_data.DATAB
x_input[0] => tmp_write_data.DATAB
x_input[0] => tmp_write_data.DATAB
x_input[0] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
x_plus[0] <= single_clk_ram_mul:ram1.port4
x_plus[1] <= single_clk_ram_mul:ram1.port4
x_plus[2] <= single_clk_ram_mul:ram1.port4
x_plus[3] <= single_clk_ram_mul:ram1.port4
x_minus[0] <= single_clk_ram_mul:ram1.port4
x_minus[1] <= single_clk_ram_mul:ram1.port4
x_minus[2] <= single_clk_ram_mul:ram1.port4
x_minus[3] <= single_clk_ram_mul:ram1.port4
y_plus[0] <= single_clk_ram_mul:ram1.port4
y_plus[1] <= single_clk_ram_mul:ram1.port4
y_plus[2] <= single_clk_ram_mul:ram1.port4
y_plus[3] <= single_clk_ram_mul:ram1.port4
y_minus[0] <= single_clk_ram_mul:ram1.port4
y_minus[1] <= single_clk_ram_mul:ram1.port4
y_minus[2] <= single_clk_ram_mul:ram1.port4
y_minus[3] <= single_clk_ram_mul:ram1.port4
clk => clk.IN1
cnt[0] => Decoder0.IN1
cnt[1] => Decoder0.IN0
cnt[2] => ~NO_FANOUT~
cnt[3] => ~NO_FANOUT~
cnt[4] => ~NO_FANOUT~
cnt[5] => ~NO_FANOUT~
cnt[6] => ~NO_FANOUT~
cnt[7] => ~NO_FANOUT~
cnt[8] => ~NO_FANOUT~
we => we.IN1
write_enable => write_enable.IN1


|Newton_method|Multiplier:mul1|generate_CA_REG_mul:CA_REG|single_clk_ram_mul:ram1
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7
data[8] => mem.data_a[8].DATAIN
data[8] => mem.DATAIN8
data[9] => mem.data_a[9].DATAIN
data[9] => mem.DATAIN9
data[10] => mem.data_a[10].DATAIN
data[10] => mem.DATAIN10
data[11] => mem.data_a[11].DATAIN
data[11] => mem.DATAIN11
data[12] => mem.data_a[12].DATAIN
data[12] => mem.DATAIN12
data[13] => mem.data_a[13].DATAIN
data[13] => mem.DATAIN13
data[14] => mem.data_a[14].DATAIN
data[14] => mem.DATAIN14
data[15] => mem.data_a[15].DATAIN
data[15] => mem.DATAIN15
addr[0] => mem.waddr_a[0].DATAIN
addr[0] => addr_reg[0].DATAIN
addr[0] => mem.WADDR
addr[1] => mem.waddr_a[1].DATAIN
addr[1] => addr_reg[1].DATAIN
addr[1] => mem.WADDR1
addr[2] => mem.waddr_a[2].DATAIN
addr[2] => addr_reg[2].DATAIN
addr[2] => mem.WADDR2
addr[3] => mem.waddr_a[3].DATAIN
addr[3] => addr_reg[3].DATAIN
addr[3] => mem.WADDR3
addr[4] => mem.waddr_a[4].DATAIN
addr[4] => addr_reg[4].DATAIN
addr[4] => mem.WADDR4
addr[5] => mem.waddr_a[5].DATAIN
addr[5] => addr_reg[5].DATAIN
addr[5] => mem.WADDR5
addr[6] => mem.waddr_a[6].DATAIN
addr[6] => addr_reg[6].DATAIN
addr[6] => mem.WADDR6
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[15].CLK
clk => mem.data_a[14].CLK
clk => mem.data_a[13].CLK
clk => mem.data_a[12].CLK
clk => mem.data_a[11].CLK
clk => mem.data_a[10].CLK
clk => mem.data_a[9].CLK
clk => mem.data_a[8].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
q[2] <= mem.DATAOUT2
q[3] <= mem.DATAOUT3
q[4] <= mem.DATAOUT4
q[5] <= mem.DATAOUT5
q[6] <= mem.DATAOUT6
q[7] <= mem.DATAOUT7
q[8] <= mem.DATAOUT8
q[9] <= mem.DATAOUT9
q[10] <= mem.DATAOUT10
q[11] <= mem.DATAOUT11
q[12] <= mem.DATAOUT12
q[13] <= mem.DATAOUT13
q[14] <= mem.DATAOUT14
q[15] <= mem.DATAOUT15
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|Multiplier:mul1|x_string_delay_control:Delay_block
clk => clk.IN2
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
STATES[0] => STATES[0].IN1
STATES[1] => STATES[1].IN1
x_plus_value[0] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_plus_value[1] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_plus_value[2] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_plus_value[3] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[0] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[1] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[2] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[3] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
write_enable => write_enable.IN2


|Newton_method|Multiplier:mul1|x_string_delay_control:Delay_block|D_FF_four_bits:D_FF
in_plus[0] => out_plus[0]~reg0.DATAIN
in_plus[1] => out_plus[1]~reg0.DATAIN
in_plus[2] => out_plus[2]~reg0.DATAIN
in_plus[3] => out_plus[3]~reg0.DATAIN
in_minus[0] => out_minus[0]~reg0.DATAIN
in_minus[1] => out_minus[1]~reg0.DATAIN
in_minus[2] => out_minus[2]~reg0.DATAIN
in_minus[3] => out_minus[3]~reg0.DATAIN
clk => out_plus[0]~reg0.CLK
clk => out_plus[1]~reg0.CLK
clk => out_plus[2]~reg0.CLK
clk => out_plus[3]~reg0.CLK
clk => out_minus[0]~reg0.CLK
clk => out_minus[1]~reg0.CLK
clk => out_minus[2]~reg0.CLK
clk => out_minus[3]~reg0.CLK
out_plus[0] <= out_plus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_plus[1] <= out_plus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_plus[2] <= out_plus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_plus[3] <= out_plus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[0] <= out_minus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[1] <= out_minus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[2] <= out_minus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[3] <= out_minus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => out_plus[0]~reg0.ENA
write_enable => out_plus[1]~reg0.ENA
write_enable => out_plus[2]~reg0.ENA
write_enable => out_plus[3]~reg0.ENA
write_enable => out_minus[0]~reg0.ENA
write_enable => out_minus[1]~reg0.ENA
write_enable => out_minus[2]~reg0.ENA
write_enable => out_minus[3]~reg0.ENA


|Newton_method|Multiplier:mul1|x_string_delay_control:Delay_block|D_FF_two_bits:D_state
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier:mul1|SDVM_mul:selector1
clk => clk.IN1
STATE[0] => ~NO_FANOUT~
STATE[1] => ~NO_FANOUT~
vec_in_plus[0] => Mux3.IN3
vec_in_plus[0] => Mux3.IN2
vec_in_plus[1] => Mux2.IN3
vec_in_plus[1] => Mux2.IN2
vec_in_plus[2] => Mux1.IN3
vec_in_plus[2] => Mux1.IN2
vec_in_plus[3] => Mux0.IN3
vec_in_plus[3] => Mux0.IN2
vec_in_minus[0] => Mux7.IN3
vec_in_minus[0] => Mux7.IN2
vec_in_minus[1] => Mux6.IN3
vec_in_minus[1] => Mux6.IN2
vec_in_minus[2] => Mux5.IN3
vec_in_minus[2] => Mux5.IN2
vec_in_minus[3] => Mux4.IN3
vec_in_minus[3] => Mux4.IN2
digit_select[0] => digit_select[0].IN1
digit_select[1] => digit_select[1].IN1
vec_out_plus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
write_enable => write_enable.IN1


|Newton_method|Multiplier:mul1|SDVM_mul:selector1|D_FF_two_bits:D1
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier:mul1|SDVM_mul:selector2
clk => clk.IN1
STATE[0] => ~NO_FANOUT~
STATE[1] => ~NO_FANOUT~
vec_in_plus[0] => Mux3.IN3
vec_in_plus[0] => Mux3.IN2
vec_in_plus[1] => Mux2.IN3
vec_in_plus[1] => Mux2.IN2
vec_in_plus[2] => Mux1.IN3
vec_in_plus[2] => Mux1.IN2
vec_in_plus[3] => Mux0.IN3
vec_in_plus[3] => Mux0.IN2
vec_in_minus[0] => Mux7.IN3
vec_in_minus[0] => Mux7.IN2
vec_in_minus[1] => Mux6.IN3
vec_in_minus[1] => Mux6.IN2
vec_in_minus[2] => Mux5.IN3
vec_in_minus[2] => Mux5.IN2
vec_in_minus[3] => Mux4.IN3
vec_in_minus[3] => Mux4.IN2
digit_select[0] => digit_select[0].IN1
digit_select[1] => digit_select[1].IN1
vec_out_plus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
write_enable => write_enable.IN1


|Newton_method|Multiplier:mul1|SDVM_mul:selector2|D_FF_two_bits:D1
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic
cnt_master[0] => ~NO_FANOUT~
cnt_master[1] => ~NO_FANOUT~
cnt_master[2] => ~NO_FANOUT~
cnt_master[3] => ~NO_FANOUT~
cnt_master[4] => ~NO_FANOUT~
cnt_master[5] => ~NO_FANOUT~
cnt_master[6] => ~NO_FANOUT~
cnt_master[7] => ~NO_FANOUT~
cnt_master[8] => ~NO_FANOUT~
clk => clk.IN3
p[0] => p[0].IN1
p[1] => p[1].IN1
STATE[0] => Equal0.IN1
STATE[0] => Equal2.IN1
STATE[0] => Equal3.IN0
STATE[0] => Equal4.IN1
STATE[1] => Equal0.IN0
STATE[1] => Equal2.IN0
STATE[1] => Equal3.IN1
STATE[1] => Equal4.IN0
comp_cycle[0] => read_addr[0].IN1
comp_cycle[1] => read_addr[1].IN1
comp_cycle[2] => read_addr[2].IN1
comp_cycle[3] => read_addr[3].IN1
comp_cycle[4] => read_addr[4].IN1
comp_cycle[5] => read_addr[5].IN1
comp_cycle[6] => read_addr[6].IN1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
v_value_plus[0] <= w_plus_shifted[1].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[1] <= w_plus_shifted[2].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[2] <= w_plus_shifted[3].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[3] <= four_bits_parallel_adder:adder1.port6
v_value_plus[4] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[5] <= v_value_plus[5].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[6] <= v_value_plus[6].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[7] <= v_value_plus[7].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[8] <= v_value_plus[8].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[0] <= w_minus_shifted[1].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[1] <= w_minus_shifted[2].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[2] <= w_minus_shifted[3].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[3] <= four_bits_parallel_adder:adder1.port7
v_value_minus[4] <= Add3.DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[5] <= v_value_minus[5].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[6] <= v_value_minus[6].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[7] <= v_value_minus[7].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[8] <= v_value_minus[8].DB_MAX_OUTPUT_PORT_TYPE
write_enable => shift_plus.OUTPUTSELECT
write_enable => shift_minus.OUTPUTSELECT
write_enable => v_upper_minus_tmp[0].ENA
write_enable => v_upper_minus_tmp[1].ENA
write_enable => v_upper_minus_tmp[2].ENA
write_enable => v_upper_minus_tmp[3].ENA
write_enable => v_upper_minus_tmp[4].ENA
write_enable => v_upper_plus_tmp[0].ENA
write_enable => v_upper_plus_tmp[1].ENA
write_enable => v_upper_plus_tmp[2].ENA
write_enable => v_upper_plus_tmp[3].ENA
write_enable => v_upper_plus_tmp[4].ENA


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
residue_plus[0] => residue_plus[0].IN1
residue_plus[1] => residue_plus[1].IN1
residue_plus[2] => residue_plus[2].IN1
residue_plus[3] => residue_plus[3].IN1
residue_minus[0] => residue_minus[0].IN1
residue_minus[1] => residue_minus[1].IN1
residue_minus[2] => residue_minus[2].IN1
residue_minus[3] => residue_minus[3].IN1
results_plus[0] <= four_bits_adder:adder2.port4
results_plus[1] <= four_bits_adder:adder2.port4
results_plus[2] <= four_bits_adder:adder2.port4
results_plus[3] <= four_bits_adder:adder2.port4
results_minus[0] <= four_bits_adder:adder2.port5
results_minus[1] <= four_bits_adder:adder2.port5
results_minus[2] <= four_bits_adder:adder2.port5
results_minus[3] <= four_bits_adder:adder2.port5
cin_one[0] => cin_one[0].IN1
cin_one[1] => cin_one[1].IN1
cin_two[0] => cin_two[0].IN1
cin_two[1] => cin_two[1].IN1
cout_one[0] <= four_bits_adder:adder1.port7
cout_one[1] <= four_bits_adder:adder1.port7
cout_two[0] <= four_bits_adder:adder2.port7
cout_two[1] <= four_bits_adder:adder2.port7


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|D_FF_two_bits:D2
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|D_FF_two_bits:D3
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|M_block:M
sample_plus[0] => Add0.IN8
sample_plus[1] => Add0.IN7
sample_plus[2] => Add0.IN6
sample_plus[3] => Add0.IN5
sample_minus[0] => Add0.IN4
sample_minus[1] => Add0.IN3
sample_minus[2] => Add0.IN2
sample_minus[3] => Add0.IN1
P_value[0] => w_value.IN0
P_value[1] => w_value.IN1
upper_bits_plus[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
upper_bits_plus[1] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
upper_bits_plus[2] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
upper_bits_minus[0] <= <GND>
upper_bits_minus[1] <= <GND>
upper_bits_minus[2] <= <GND>


|Newton_method|Multiplier:mul1|Adder_control_logic:adder_control_logic|v_value_ram:v_ram
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.we_a.DATAIN
we => mem.WE
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
q[2] <= mem.DATAOUT2
q[3] <= mem.DATAOUT3
q[4] <= mem.DATAOUT4
q[5] <= mem.DATAOUT5
q[6] <= mem.DATAOUT6
q[7] <= mem.DATAOUT7


|Newton_method|Multiplier:mul1|Sample_V:Sample
positive_vec[0] => Add0.IN18
positive_vec[1] => Add0.IN17
positive_vec[2] => Add0.IN16
positive_vec[3] => Add0.IN15
positive_vec[4] => Add0.IN14
positive_vec[5] => Add0.IN13
positive_vec[6] => Add0.IN12
positive_vec[7] => Add0.IN11
positive_vec[8] => Add0.IN10
negative_vec[0] => Add0.IN9
negative_vec[1] => Add0.IN8
negative_vec[2] => Add0.IN7
negative_vec[3] => Add0.IN6
negative_vec[4] => Add0.IN5
negative_vec[5] => Add0.IN4
negative_vec[6] => Add0.IN3
negative_vec[7] => Add0.IN2
negative_vec[8] => Add0.IN1
sample_for_P[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
sample_for_P[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
sample_for_P[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul1|Selection:V_block
in[0] => Decoder0.IN2
in[1] => Decoder0.IN1
in[2] => Decoder0.IN0
out[0] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2
x[0] => x[0].IN2
x[1] => x[1].IN2
y[0] => y[0].IN2
y[1] => y[1].IN2
p[0] <= p[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p[1] <= p[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => clk.IN7
STATE[0] <= STATE[0].DB_MAX_OUTPUT_PORT_TYPE
STATE[1] <= STATE[1].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[0] <= computation_cycle[0].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[1] <= computation_cycle[1].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[2] <= computation_cycle[2].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[3] <= computation_cycle[3].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[4] <= computation_cycle[4].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[5] <= computation_cycle[5].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[6] <= computation_cycle[6].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[0] <= cnt_master[0].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[1] <= cnt_master[1].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[2] <= cnt_master[2].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[3] <= cnt_master[3].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[4] <= cnt_master[4].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[5] <= cnt_master[5].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[6] <= cnt_master[6].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[7] <= cnt_master[7].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[8] <= cnt_master[8].DB_MAX_OUTPUT_PORT_TYPE
In_vd => always1.IN1
Out_rd => always1.IN1
In_rd <= In_rd~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_vd <= Out_vd~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|counter:main_counter
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
clk => cnt[0]~reg0.CLK
clk => cnt[1]~reg0.CLK
clk => cnt[2]~reg0.CLK
clk => cnt[3]~reg0.CLK
clk => cnt[4]~reg0.CLK
clk => cnt[5]~reg0.CLK
clk => cnt[6]~reg0.CLK
clk => cnt[7]~reg0.CLK
clk => cnt[8]~reg0.CLK
cnt[0] <= cnt[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[1] <= cnt[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[2] <= cnt[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[3] <= cnt[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[4] <= cnt[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[5] <= cnt[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[6] <= cnt[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[7] <= cnt[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[8] <= cnt[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => cnt[0]~reg0.ENA
write_enable => cnt[1]~reg0.ENA
write_enable => cnt[2]~reg0.ENA
write_enable => cnt[3]~reg0.ENA
write_enable => cnt[4]~reg0.ENA
write_enable => cnt[5]~reg0.ENA
write_enable => cnt[6]~reg0.ENA
write_enable => cnt[7]~reg0.ENA
write_enable => cnt[8]~reg0.ENA


|Newton_method|Multiplier:mul2|computation_control_mul:FSM
cnt_master[0] => Equal0.IN1
cnt_master[0] => Equal1.IN8
cnt_master[0] => Equal3.IN1
cnt_master[1] => Equal0.IN0
cnt_master[1] => Equal1.IN7
cnt_master[1] => Equal3.IN0
cnt_master[2] => computation_cycle.DATAB
cnt_master[2] => Add1.IN14
cnt_master[2] => computation_cycle.DATAA
cnt_master[2] => Mux9.IN5
cnt_master[2] => Equal0.IN8
cnt_master[2] => Equal1.IN0
cnt_master[3] => computation_cycle.DATAB
cnt_master[3] => Add1.IN13
cnt_master[3] => computation_cycle.DATAA
cnt_master[3] => Mux8.IN5
cnt_master[3] => Equal0.IN7
cnt_master[3] => Equal1.IN6
cnt_master[4] => computation_cycle.DATAB
cnt_master[4] => Add1.IN12
cnt_master[4] => computation_cycle.DATAA
cnt_master[4] => Mux7.IN5
cnt_master[4] => Equal0.IN6
cnt_master[4] => Equal1.IN5
cnt_master[5] => computation_cycle.DATAB
cnt_master[5] => Add1.IN11
cnt_master[5] => computation_cycle.DATAA
cnt_master[5] => Mux6.IN5
cnt_master[5] => Equal0.IN5
cnt_master[5] => Equal1.IN4
cnt_master[6] => computation_cycle.DATAB
cnt_master[6] => Add1.IN10
cnt_master[6] => computation_cycle.DATAA
cnt_master[6] => Mux5.IN5
cnt_master[6] => Equal0.IN4
cnt_master[6] => Equal1.IN3
cnt_master[7] => computation_cycle.DATAB
cnt_master[7] => Add1.IN9
cnt_master[7] => computation_cycle.DATAA
cnt_master[7] => Mux4.IN5
cnt_master[7] => Equal0.IN3
cnt_master[7] => Equal1.IN2
cnt_master[8] => computation_cycle.DATAB
cnt_master[8] => Add1.IN8
cnt_master[8] => computation_cycle.DATAA
cnt_master[8] => Mux3.IN5
cnt_master[8] => Equal0.IN2
cnt_master[8] => Equal1.IN1
clk => computation_cycle[0]~reg0.CLK
clk => computation_cycle[1]~reg0.CLK
clk => computation_cycle[2]~reg0.CLK
clk => computation_cycle[3]~reg0.CLK
clk => computation_cycle[4]~reg0.CLK
clk => computation_cycle[5]~reg0.CLK
clk => computation_cycle[6]~reg0.CLK
clk => STATE[0]~reg0.CLK
clk => STATE[1]~reg0.CLK
clk => we~reg0.CLK
clk => stay~3.DATAIN
computation_cycle[0] <= computation_cycle[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[1] <= computation_cycle[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[2] <= computation_cycle[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[3] <= computation_cycle[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[4] <= computation_cycle[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[5] <= computation_cycle[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[6] <= computation_cycle[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_for_input <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
we <= we~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[0] <= STATE[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[1] <= STATE[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => stay.OUTPUTSELECT
write_enable => stay.OUTPUTSELECT
write_enable => computation_cycle[0]~reg0.ENA
write_enable => computation_cycle[1]~reg0.ENA
write_enable => computation_cycle[2]~reg0.ENA
write_enable => computation_cycle[3]~reg0.ENA
write_enable => computation_cycle[4]~reg0.ENA
write_enable => computation_cycle[5]~reg0.ENA
write_enable => computation_cycle[6]~reg0.ENA
write_enable => STATE[0]~reg0.ENA
write_enable => STATE[1]~reg0.ENA
write_enable => we~reg0.ENA


|Newton_method|Multiplier:mul2|generate_CA_REG_mul:CA_REG
computation_cycles[0] => addr[0].IN1
computation_cycles[1] => addr[1].IN1
computation_cycles[2] => addr[2].IN1
computation_cycles[3] => addr[3].IN1
computation_cycles[4] => addr[4].IN1
computation_cycles[5] => addr[5].IN1
computation_cycles[6] => addr[6].IN1
x_input[0] => tmp_write_data.DATAB
x_input[0] => tmp_write_data.DATAB
x_input[0] => tmp_write_data.DATAB
x_input[0] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
x_plus[0] <= single_clk_ram_mul:ram1.port4
x_plus[1] <= single_clk_ram_mul:ram1.port4
x_plus[2] <= single_clk_ram_mul:ram1.port4
x_plus[3] <= single_clk_ram_mul:ram1.port4
x_minus[0] <= single_clk_ram_mul:ram1.port4
x_minus[1] <= single_clk_ram_mul:ram1.port4
x_minus[2] <= single_clk_ram_mul:ram1.port4
x_minus[3] <= single_clk_ram_mul:ram1.port4
y_plus[0] <= single_clk_ram_mul:ram1.port4
y_plus[1] <= single_clk_ram_mul:ram1.port4
y_plus[2] <= single_clk_ram_mul:ram1.port4
y_plus[3] <= single_clk_ram_mul:ram1.port4
y_minus[0] <= single_clk_ram_mul:ram1.port4
y_minus[1] <= single_clk_ram_mul:ram1.port4
y_minus[2] <= single_clk_ram_mul:ram1.port4
y_minus[3] <= single_clk_ram_mul:ram1.port4
clk => clk.IN1
cnt[0] => Decoder0.IN1
cnt[1] => Decoder0.IN0
cnt[2] => ~NO_FANOUT~
cnt[3] => ~NO_FANOUT~
cnt[4] => ~NO_FANOUT~
cnt[5] => ~NO_FANOUT~
cnt[6] => ~NO_FANOUT~
cnt[7] => ~NO_FANOUT~
cnt[8] => ~NO_FANOUT~
we => we.IN1
write_enable => write_enable.IN1


|Newton_method|Multiplier:mul2|generate_CA_REG_mul:CA_REG|single_clk_ram_mul:ram1
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7
data[8] => mem.data_a[8].DATAIN
data[8] => mem.DATAIN8
data[9] => mem.data_a[9].DATAIN
data[9] => mem.DATAIN9
data[10] => mem.data_a[10].DATAIN
data[10] => mem.DATAIN10
data[11] => mem.data_a[11].DATAIN
data[11] => mem.DATAIN11
data[12] => mem.data_a[12].DATAIN
data[12] => mem.DATAIN12
data[13] => mem.data_a[13].DATAIN
data[13] => mem.DATAIN13
data[14] => mem.data_a[14].DATAIN
data[14] => mem.DATAIN14
data[15] => mem.data_a[15].DATAIN
data[15] => mem.DATAIN15
addr[0] => mem.waddr_a[0].DATAIN
addr[0] => addr_reg[0].DATAIN
addr[0] => mem.WADDR
addr[1] => mem.waddr_a[1].DATAIN
addr[1] => addr_reg[1].DATAIN
addr[1] => mem.WADDR1
addr[2] => mem.waddr_a[2].DATAIN
addr[2] => addr_reg[2].DATAIN
addr[2] => mem.WADDR2
addr[3] => mem.waddr_a[3].DATAIN
addr[3] => addr_reg[3].DATAIN
addr[3] => mem.WADDR3
addr[4] => mem.waddr_a[4].DATAIN
addr[4] => addr_reg[4].DATAIN
addr[4] => mem.WADDR4
addr[5] => mem.waddr_a[5].DATAIN
addr[5] => addr_reg[5].DATAIN
addr[5] => mem.WADDR5
addr[6] => mem.waddr_a[6].DATAIN
addr[6] => addr_reg[6].DATAIN
addr[6] => mem.WADDR6
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[15].CLK
clk => mem.data_a[14].CLK
clk => mem.data_a[13].CLK
clk => mem.data_a[12].CLK
clk => mem.data_a[11].CLK
clk => mem.data_a[10].CLK
clk => mem.data_a[9].CLK
clk => mem.data_a[8].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
q[2] <= mem.DATAOUT2
q[3] <= mem.DATAOUT3
q[4] <= mem.DATAOUT4
q[5] <= mem.DATAOUT5
q[6] <= mem.DATAOUT6
q[7] <= mem.DATAOUT7
q[8] <= mem.DATAOUT8
q[9] <= mem.DATAOUT9
q[10] <= mem.DATAOUT10
q[11] <= mem.DATAOUT11
q[12] <= mem.DATAOUT12
q[13] <= mem.DATAOUT13
q[14] <= mem.DATAOUT14
q[15] <= mem.DATAOUT15
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|Multiplier:mul2|x_string_delay_control:Delay_block
clk => clk.IN2
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
STATES[0] => STATES[0].IN1
STATES[1] => STATES[1].IN1
x_plus_value[0] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_plus_value[1] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_plus_value[2] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_plus_value[3] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[0] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[1] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[2] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[3] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
write_enable => write_enable.IN2


|Newton_method|Multiplier:mul2|x_string_delay_control:Delay_block|D_FF_four_bits:D_FF
in_plus[0] => out_plus[0]~reg0.DATAIN
in_plus[1] => out_plus[1]~reg0.DATAIN
in_plus[2] => out_plus[2]~reg0.DATAIN
in_plus[3] => out_plus[3]~reg0.DATAIN
in_minus[0] => out_minus[0]~reg0.DATAIN
in_minus[1] => out_minus[1]~reg0.DATAIN
in_minus[2] => out_minus[2]~reg0.DATAIN
in_minus[3] => out_minus[3]~reg0.DATAIN
clk => out_plus[0]~reg0.CLK
clk => out_plus[1]~reg0.CLK
clk => out_plus[2]~reg0.CLK
clk => out_plus[3]~reg0.CLK
clk => out_minus[0]~reg0.CLK
clk => out_minus[1]~reg0.CLK
clk => out_minus[2]~reg0.CLK
clk => out_minus[3]~reg0.CLK
out_plus[0] <= out_plus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_plus[1] <= out_plus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_plus[2] <= out_plus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_plus[3] <= out_plus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[0] <= out_minus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[1] <= out_minus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[2] <= out_minus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[3] <= out_minus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => out_plus[0]~reg0.ENA
write_enable => out_plus[1]~reg0.ENA
write_enable => out_plus[2]~reg0.ENA
write_enable => out_plus[3]~reg0.ENA
write_enable => out_minus[0]~reg0.ENA
write_enable => out_minus[1]~reg0.ENA
write_enable => out_minus[2]~reg0.ENA
write_enable => out_minus[3]~reg0.ENA


|Newton_method|Multiplier:mul2|x_string_delay_control:Delay_block|D_FF_two_bits:D_state
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier:mul2|SDVM_mul:selector1
clk => clk.IN1
STATE[0] => ~NO_FANOUT~
STATE[1] => ~NO_FANOUT~
vec_in_plus[0] => Mux3.IN3
vec_in_plus[0] => Mux3.IN2
vec_in_plus[1] => Mux2.IN3
vec_in_plus[1] => Mux2.IN2
vec_in_plus[2] => Mux1.IN3
vec_in_plus[2] => Mux1.IN2
vec_in_plus[3] => Mux0.IN3
vec_in_plus[3] => Mux0.IN2
vec_in_minus[0] => Mux7.IN3
vec_in_minus[0] => Mux7.IN2
vec_in_minus[1] => Mux6.IN3
vec_in_minus[1] => Mux6.IN2
vec_in_minus[2] => Mux5.IN3
vec_in_minus[2] => Mux5.IN2
vec_in_minus[3] => Mux4.IN3
vec_in_minus[3] => Mux4.IN2
digit_select[0] => digit_select[0].IN1
digit_select[1] => digit_select[1].IN1
vec_out_plus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
write_enable => write_enable.IN1


|Newton_method|Multiplier:mul2|SDVM_mul:selector1|D_FF_two_bits:D1
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier:mul2|SDVM_mul:selector2
clk => clk.IN1
STATE[0] => ~NO_FANOUT~
STATE[1] => ~NO_FANOUT~
vec_in_plus[0] => Mux3.IN3
vec_in_plus[0] => Mux3.IN2
vec_in_plus[1] => Mux2.IN3
vec_in_plus[1] => Mux2.IN2
vec_in_plus[2] => Mux1.IN3
vec_in_plus[2] => Mux1.IN2
vec_in_plus[3] => Mux0.IN3
vec_in_plus[3] => Mux0.IN2
vec_in_minus[0] => Mux7.IN3
vec_in_minus[0] => Mux7.IN2
vec_in_minus[1] => Mux6.IN3
vec_in_minus[1] => Mux6.IN2
vec_in_minus[2] => Mux5.IN3
vec_in_minus[2] => Mux5.IN2
vec_in_minus[3] => Mux4.IN3
vec_in_minus[3] => Mux4.IN2
digit_select[0] => digit_select[0].IN1
digit_select[1] => digit_select[1].IN1
vec_out_plus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
write_enable => write_enable.IN1


|Newton_method|Multiplier:mul2|SDVM_mul:selector2|D_FF_two_bits:D1
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic
cnt_master[0] => ~NO_FANOUT~
cnt_master[1] => ~NO_FANOUT~
cnt_master[2] => ~NO_FANOUT~
cnt_master[3] => ~NO_FANOUT~
cnt_master[4] => ~NO_FANOUT~
cnt_master[5] => ~NO_FANOUT~
cnt_master[6] => ~NO_FANOUT~
cnt_master[7] => ~NO_FANOUT~
cnt_master[8] => ~NO_FANOUT~
clk => clk.IN3
p[0] => p[0].IN1
p[1] => p[1].IN1
STATE[0] => Equal0.IN1
STATE[0] => Equal2.IN1
STATE[0] => Equal3.IN0
STATE[0] => Equal4.IN1
STATE[1] => Equal0.IN0
STATE[1] => Equal2.IN0
STATE[1] => Equal3.IN1
STATE[1] => Equal4.IN0
comp_cycle[0] => read_addr[0].IN1
comp_cycle[1] => read_addr[1].IN1
comp_cycle[2] => read_addr[2].IN1
comp_cycle[3] => read_addr[3].IN1
comp_cycle[4] => read_addr[4].IN1
comp_cycle[5] => read_addr[5].IN1
comp_cycle[6] => read_addr[6].IN1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
v_value_plus[0] <= w_plus_shifted[1].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[1] <= w_plus_shifted[2].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[2] <= w_plus_shifted[3].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[3] <= four_bits_parallel_adder:adder1.port6
v_value_plus[4] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[5] <= v_value_plus[5].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[6] <= v_value_plus[6].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[7] <= v_value_plus[7].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[8] <= v_value_plus[8].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[0] <= w_minus_shifted[1].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[1] <= w_minus_shifted[2].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[2] <= w_minus_shifted[3].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[3] <= four_bits_parallel_adder:adder1.port7
v_value_minus[4] <= Add3.DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[5] <= v_value_minus[5].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[6] <= v_value_minus[6].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[7] <= v_value_minus[7].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[8] <= v_value_minus[8].DB_MAX_OUTPUT_PORT_TYPE
write_enable => shift_plus.OUTPUTSELECT
write_enable => shift_minus.OUTPUTSELECT
write_enable => v_upper_minus_tmp[0].ENA
write_enable => v_upper_minus_tmp[1].ENA
write_enable => v_upper_minus_tmp[2].ENA
write_enable => v_upper_minus_tmp[3].ENA
write_enable => v_upper_minus_tmp[4].ENA
write_enable => v_upper_plus_tmp[0].ENA
write_enable => v_upper_plus_tmp[1].ENA
write_enable => v_upper_plus_tmp[2].ENA
write_enable => v_upper_plus_tmp[3].ENA
write_enable => v_upper_plus_tmp[4].ENA


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
residue_plus[0] => residue_plus[0].IN1
residue_plus[1] => residue_plus[1].IN1
residue_plus[2] => residue_plus[2].IN1
residue_plus[3] => residue_plus[3].IN1
residue_minus[0] => residue_minus[0].IN1
residue_minus[1] => residue_minus[1].IN1
residue_minus[2] => residue_minus[2].IN1
residue_minus[3] => residue_minus[3].IN1
results_plus[0] <= four_bits_adder:adder2.port4
results_plus[1] <= four_bits_adder:adder2.port4
results_plus[2] <= four_bits_adder:adder2.port4
results_plus[3] <= four_bits_adder:adder2.port4
results_minus[0] <= four_bits_adder:adder2.port5
results_minus[1] <= four_bits_adder:adder2.port5
results_minus[2] <= four_bits_adder:adder2.port5
results_minus[3] <= four_bits_adder:adder2.port5
cin_one[0] => cin_one[0].IN1
cin_one[1] => cin_one[1].IN1
cin_two[0] => cin_two[0].IN1
cin_two[1] => cin_two[1].IN1
cout_one[0] <= four_bits_adder:adder1.port7
cout_one[1] <= four_bits_adder:adder1.port7
cout_two[0] <= four_bits_adder:adder2.port7
cout_two[1] <= four_bits_adder:adder2.port7


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|D_FF_two_bits:D2
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|D_FF_two_bits:D3
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|M_block:M
sample_plus[0] => Add0.IN8
sample_plus[1] => Add0.IN7
sample_plus[2] => Add0.IN6
sample_plus[3] => Add0.IN5
sample_minus[0] => Add0.IN4
sample_minus[1] => Add0.IN3
sample_minus[2] => Add0.IN2
sample_minus[3] => Add0.IN1
P_value[0] => w_value.IN0
P_value[1] => w_value.IN1
upper_bits_plus[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
upper_bits_plus[1] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
upper_bits_plus[2] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
upper_bits_minus[0] <= <GND>
upper_bits_minus[1] <= <GND>
upper_bits_minus[2] <= <GND>


|Newton_method|Multiplier:mul2|Adder_control_logic:adder_control_logic|v_value_ram:v_ram
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.we_a.DATAIN
we => mem.WE
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
q[2] <= mem.DATAOUT2
q[3] <= mem.DATAOUT3
q[4] <= mem.DATAOUT4
q[5] <= mem.DATAOUT5
q[6] <= mem.DATAOUT6
q[7] <= mem.DATAOUT7


|Newton_method|Multiplier:mul2|Sample_V:Sample
positive_vec[0] => Add0.IN18
positive_vec[1] => Add0.IN17
positive_vec[2] => Add0.IN16
positive_vec[3] => Add0.IN15
positive_vec[4] => Add0.IN14
positive_vec[5] => Add0.IN13
positive_vec[6] => Add0.IN12
positive_vec[7] => Add0.IN11
positive_vec[8] => Add0.IN10
negative_vec[0] => Add0.IN9
negative_vec[1] => Add0.IN8
negative_vec[2] => Add0.IN7
negative_vec[3] => Add0.IN6
negative_vec[4] => Add0.IN5
negative_vec[5] => Add0.IN4
negative_vec[6] => Add0.IN3
negative_vec[7] => Add0.IN2
negative_vec[8] => Add0.IN1
sample_for_P[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
sample_for_P[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
sample_for_P[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier:mul2|Selection:V_block
in[0] => Decoder0.IN2
in[1] => Decoder0.IN1
in[2] => Decoder0.IN0
out[0] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|subtraction:sub_one
clk => clk.IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
y[0] => inverted_y[0].IN1
y[1] => inverted_y[1].IN1
res[0] <= res[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
In_vld => always0.IN1
In_rdy <= In_rdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_vld <= Out_vld~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_rdy => always0.IN1


|Newton_method|subtraction:sub_one|On_line_adder:adder
clk => clk.IN5
enable => enable.IN5
x[0] => x_minus_tmp.IN1
x[1] => x_plus.IN1
y[0] => g_in[0].IN1
y[1] => y_plus.IN1
z[0] <= D_flipflop:D4.port2
z[1] <= D_flipflop:D5.port2


|Newton_method|subtraction:sub_one|On_line_adder:adder|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|subtraction:sub_one|On_line_adder:adder|D_flipflop:D1
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction:sub_one|On_line_adder:adder|D_flipflop:D2
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction:sub_one|On_line_adder:adder|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|subtraction:sub_one|On_line_adder:adder|D_flipflop:D3
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction:sub_one|On_line_adder:adder|D_flipflop:D4
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction:sub_one|On_line_adder:adder|D_flipflop:D5
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction_two:sub_two
clk => clk.IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
y[0] => inverted_y[0].IN1
y[1] => inverted_y[1].IN1
res[0] <= res[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
In_vld => always0.IN1
In_rdy <= In_rdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_vld <= Out_vld~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_rdy => always0.IN1


|Newton_method|subtraction_two:sub_two|On_line_adder:adder
clk => clk.IN5
enable => enable.IN5
x[0] => x_minus_tmp.IN1
x[1] => x_plus.IN1
y[0] => g_in[0].IN1
y[1] => y_plus.IN1
z[0] <= D_flipflop:D4.port2
z[1] <= D_flipflop:D5.port2


|Newton_method|subtraction_two:sub_two|On_line_adder:adder|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|subtraction_two:sub_two|On_line_adder:adder|D_flipflop:D1
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction_two:sub_two|On_line_adder:adder|D_flipflop:D2
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction_two:sub_two|On_line_adder:adder|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|subtraction_two:sub_two|On_line_adder:adder|D_flipflop:D3
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction_two:sub_two|On_line_adder:adder|D_flipflop:D4
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction_two:sub_two|On_line_adder:adder|D_flipflop:D5
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|On_line_divider:divider
clk => clk.IN6
x_value[0] => x_reg_one.DATAB
x_value[1] => x_reg_one.DATAB
d_value[0] => d_reg_one.DATAB
d_value[1] => d_reg_one.DATAB
STATE[0] <= STATE[0].DB_MAX_OUTPUT_PORT_TYPE
STATE[1] <= STATE[1].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[0] <= cnt_master[0].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[1] <= cnt_master[1].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[2] <= cnt_master[2].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[3] <= cnt_master[3].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[4] <= cnt_master[4].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[5] <= cnt_master[5].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[6] <= cnt_master[6].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[7] <= cnt_master[7].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[8] <= cnt_master[8].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[0] <= computation_cycle[0].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[1] <= computation_cycle[1].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[2] <= computation_cycle[2].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[3] <= computation_cycle[3].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[4] <= computation_cycle[4].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[5] <= computation_cycle[5].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[6] <= computation_cycle[6].DB_MAX_OUTPUT_PORT_TYPE
q_value[0] <= q_value[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q_value[1] <= q_value[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_input <= enable_input.DB_MAX_OUTPUT_PORT_TYPE
fixing_dis <= fixing.DB_MAX_OUTPUT_PORT_TYPE
In_vd => always1.IN1
In_vd => always1.IN1
In_rd <= In_rd~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_vd <= Out_vd~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_rd => always1.IN1


|Newton_method|On_line_divider:divider|counter:count
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
clk => cnt[0]~reg0.CLK
clk => cnt[1]~reg0.CLK
clk => cnt[2]~reg0.CLK
clk => cnt[3]~reg0.CLK
clk => cnt[4]~reg0.CLK
clk => cnt[5]~reg0.CLK
clk => cnt[6]~reg0.CLK
clk => cnt[7]~reg0.CLK
clk => cnt[8]~reg0.CLK
cnt[0] <= cnt[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[1] <= cnt[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[2] <= cnt[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[3] <= cnt[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[4] <= cnt[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[5] <= cnt[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[6] <= cnt[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[7] <= cnt[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[8] <= cnt[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => cnt[0]~reg0.ENA
write_enable => cnt[1]~reg0.ENA
write_enable => cnt[2]~reg0.ENA
write_enable => cnt[3]~reg0.ENA
write_enable => cnt[4]~reg0.ENA
write_enable => cnt[5]~reg0.ENA
write_enable => cnt[6]~reg0.ENA
write_enable => cnt[7]~reg0.ENA
write_enable => cnt[8]~reg0.ENA


|Newton_method|On_line_divider:divider|computation_control:FSM
cnt_master[0] => Equal2.IN1
cnt_master[0] => Equal3.IN8
cnt_master[0] => Equal6.IN1
cnt_master[1] => Equal2.IN0
cnt_master[1] => Equal3.IN7
cnt_master[1] => Equal6.IN0
cnt_master[2] => Add0.IN14
cnt_master[2] => computation_cycle.DATAB
cnt_master[2] => computation_cycle.DATAB
cnt_master[2] => Add2.IN14
cnt_master[2] => computation_cycle.DATAA
cnt_master[2] => Equal3.IN6
cnt_master[2] => Equal7.IN6
cnt_master[3] => Add0.IN13
cnt_master[3] => computation_cycle.DATAB
cnt_master[3] => computation_cycle.DATAB
cnt_master[3] => Add2.IN13
cnt_master[3] => computation_cycle.DATAA
cnt_master[3] => Equal3.IN5
cnt_master[3] => Equal7.IN5
cnt_master[4] => Add0.IN12
cnt_master[4] => computation_cycle.DATAB
cnt_master[4] => computation_cycle.DATAB
cnt_master[4] => Add2.IN12
cnt_master[4] => computation_cycle.DATAA
cnt_master[4] => Equal3.IN4
cnt_master[4] => Equal7.IN4
cnt_master[5] => Add0.IN11
cnt_master[5] => computation_cycle.DATAB
cnt_master[5] => computation_cycle.DATAB
cnt_master[5] => Add2.IN11
cnt_master[5] => computation_cycle.DATAA
cnt_master[5] => Equal3.IN3
cnt_master[5] => Equal7.IN3
cnt_master[6] => Add0.IN10
cnt_master[6] => computation_cycle.DATAB
cnt_master[6] => computation_cycle.DATAB
cnt_master[6] => Add2.IN10
cnt_master[6] => computation_cycle.DATAA
cnt_master[6] => Equal3.IN2
cnt_master[6] => Equal7.IN2
cnt_master[7] => Add0.IN9
cnt_master[7] => computation_cycle.DATAB
cnt_master[7] => computation_cycle.DATAB
cnt_master[7] => Add2.IN9
cnt_master[7] => computation_cycle.DATAA
cnt_master[7] => Equal3.IN1
cnt_master[7] => Equal7.IN1
cnt_master[8] => Add0.IN8
cnt_master[8] => computation_cycle.DATAB
cnt_master[8] => computation_cycle.DATAB
cnt_master[8] => Add2.IN8
cnt_master[8] => computation_cycle.DATAA
cnt_master[8] => Equal3.IN0
cnt_master[8] => Equal7.IN0
clk => fixing~reg0.CLK
clk => we~reg0.CLK
clk => computation_cycle[0]~reg0.CLK
clk => computation_cycle[1]~reg0.CLK
clk => computation_cycle[2]~reg0.CLK
clk => computation_cycle[3]~reg0.CLK
clk => computation_cycle[4]~reg0.CLK
clk => computation_cycle[5]~reg0.CLK
clk => computation_cycle[6]~reg0.CLK
clk => STATE[0]~reg0.CLK
clk => STATE[1]~reg0.CLK
clk => q_previous[0]~reg0.CLK
clk => q_previous[1]~reg0.CLK
computation_cycle[0] <= computation_cycle[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[1] <= computation_cycle[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[2] <= computation_cycle[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[3] <= computation_cycle[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[4] <= computation_cycle[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[5] <= computation_cycle[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[6] <= computation_cycle[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_for_input <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
we <= we~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[0] <= STATE[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[1] <= STATE[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q_value[0] => Equal1.IN1
q_value[0] => q_previous[0]~reg0.DATAIN
q_value[1] => Equal1.IN0
q_value[1] => q_previous[1]~reg0.DATAIN
error_flag <= error_flag.DB_MAX_OUTPUT_PORT_TYPE
fixing <= fixing~reg0.DB_MAX_OUTPUT_PORT_TYPE
q_previous[0] <= q_previous[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q_previous[1] <= q_previous[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => we~reg0.ENA
write_enable => fixing~reg0.ENA
write_enable => q_previous[0]~reg0.ENA
write_enable => computation_cycle[0]~reg0.ENA
write_enable => computation_cycle[1]~reg0.ENA
write_enable => computation_cycle[2]~reg0.ENA
write_enable => computation_cycle[3]~reg0.ENA
write_enable => computation_cycle[4]~reg0.ENA
write_enable => computation_cycle[5]~reg0.ENA
write_enable => computation_cycle[6]~reg0.ENA
write_enable => STATE[0]~reg0.ENA
write_enable => STATE[1]~reg0.ENA
write_enable => q_previous[1]~reg0.ENA


|Newton_method|On_line_divider:divider|generate_CA_REG:CA_REG
STATE[0] => Equal2.IN1
STATE[0] => Equal10.IN1
STATE[0] => Equal11.IN1
STATE[0] => Equal13.IN1
STATE[0] => Equal15.IN1
STATE[1] => Equal2.IN0
STATE[1] => Equal10.IN0
STATE[1] => Equal11.IN0
STATE[1] => Equal13.IN0
STATE[1] => Equal15.IN0
rd_addr[0] => addr_p_read[0].IN1
rd_addr[1] => addr_p_read[1].IN1
rd_addr[2] => addr_p_read[2].IN1
rd_addr[3] => addr_p_read[3].IN1
rd_addr[4] => addr_p_read[4].IN1
rd_addr[5] => addr_p_read[5].IN1
rd_addr[6] => addr_p_read[6].IN1
computation_cycles[0] => Equal3.IN6
computation_cycles[0] => Equal16.IN6
computation_cycles[1] => Equal3.IN5
computation_cycles[1] => Equal16.IN5
computation_cycles[2] => Equal3.IN4
computation_cycles[2] => Equal16.IN4
computation_cycles[3] => Equal3.IN3
computation_cycles[3] => Equal16.IN3
computation_cycles[4] => Equal3.IN2
computation_cycles[4] => Equal16.IN2
computation_cycles[5] => Equal3.IN1
computation_cycles[5] => Equal16.IN1
computation_cycles[6] => Equal3.IN0
computation_cycles[6] => Equal16.IN0
x_input[0] => x_input[0].IN4
x_input[1] => x_input[1].IN4
p_input[0] => tmp_write_data_p.DATAB
p_input[0] => tmp_write_data_p.DATAB
p_input[0] => tmp_write_data_p.DATAB
p_input[0] => tmp_write_data_p.DATAB
p_input[1] => tmp_write_data_p.DATAB
p_input[1] => tmp_write_data_p.DATAB
p_input[1] => tmp_write_data_p.DATAB
p_input[1] => tmp_write_data_p.DATAB
x_plus[0] <= single_clk_ram_2bit:ram4.port5
x_plus[1] <= single_clk_ram_2bit:ram3.port5
x_plus[2] <= single_clk_ram_2bit:ram2.port5
x_plus[3] <= single_clk_ram_2bit:ram1.port5
x_minus[0] <= single_clk_ram_2bit:ram4.port5
x_minus[1] <= single_clk_ram_2bit:ram3.port5
x_minus[2] <= single_clk_ram_2bit:ram2.port5
x_minus[3] <= single_clk_ram_2bit:ram1.port5
p_plus[0] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_plus[1] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_plus[2] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_plus[3] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_minus[0] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_minus[1] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_minus[2] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_minus[3] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
clk => clk.IN5
cnt[0] => LessThan0.IN18
cnt[0] => LessThan1.IN18
cnt[0] => LessThan2.IN18
cnt[0] => LessThan3.IN18
cnt[0] => Decoder1.IN0
cnt[0] => Decoder2.IN0
cnt[0] => Decoder3.IN0
cnt[0] => Decoder4.IN0
cnt[0] => Equal6.IN3
cnt[0] => Equal7.IN3
cnt[0] => Equal0.IN1
cnt[0] => Equal1.IN8
cnt[0] => Equal4.IN1
cnt[0] => Equal5.IN8
cnt[0] => Equal14.IN1
cnt[1] => Add0.IN16
cnt[1] => LessThan0.IN17
cnt[1] => LessThan1.IN17
cnt[1] => LessThan2.IN17
cnt[1] => LessThan3.IN17
cnt[1] => Equal6.IN2
cnt[1] => Equal7.IN2
cnt[1] => Equal0.IN0
cnt[1] => Equal1.IN7
cnt[1] => Equal4.IN0
cnt[1] => Equal5.IN0
cnt[1] => Equal14.IN0
cnt[2] => Add0.IN15
cnt[2] => LessThan0.IN16
cnt[2] => LessThan1.IN16
cnt[2] => LessThan2.IN16
cnt[2] => LessThan3.IN16
cnt[2] => Equal0.IN8
cnt[2] => Equal1.IN0
cnt[2] => Equal5.IN7
cnt[3] => Add0.IN14
cnt[3] => LessThan0.IN15
cnt[3] => LessThan1.IN15
cnt[3] => LessThan2.IN15
cnt[3] => LessThan3.IN15
cnt[3] => Equal0.IN7
cnt[3] => Equal1.IN6
cnt[3] => Equal5.IN6
cnt[4] => Add0.IN13
cnt[4] => LessThan0.IN14
cnt[4] => LessThan1.IN14
cnt[4] => LessThan2.IN14
cnt[4] => LessThan3.IN14
cnt[4] => Equal0.IN6
cnt[4] => Equal1.IN5
cnt[4] => Equal5.IN5
cnt[5] => Add0.IN12
cnt[5] => LessThan0.IN13
cnt[5] => LessThan1.IN13
cnt[5] => LessThan2.IN13
cnt[5] => LessThan3.IN13
cnt[5] => Equal0.IN5
cnt[5] => Equal1.IN4
cnt[5] => Equal5.IN4
cnt[6] => Add0.IN11
cnt[6] => LessThan0.IN12
cnt[6] => LessThan1.IN12
cnt[6] => LessThan2.IN12
cnt[6] => LessThan3.IN12
cnt[6] => Equal0.IN4
cnt[6] => Equal1.IN3
cnt[6] => Equal5.IN3
cnt[7] => Add0.IN10
cnt[7] => LessThan0.IN11
cnt[7] => LessThan1.IN11
cnt[7] => LessThan2.IN11
cnt[7] => LessThan3.IN11
cnt[7] => Equal0.IN3
cnt[7] => Equal1.IN2
cnt[7] => Equal5.IN2
cnt[8] => Add0.IN9
cnt[8] => LessThan0.IN10
cnt[8] => LessThan1.IN10
cnt[8] => LessThan2.IN10
cnt[8] => LessThan3.IN10
cnt[8] => Equal0.IN2
cnt[8] => Equal1.IN1
cnt[8] => Equal5.IN1
error_flag => start_p.OUTPUTSELECT
error_flag => clear.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
we => ~NO_FANOUT~
d_upper_plus[0] <= d_upper_plus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d_upper_plus[1] <= d_upper_plus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d_upper_minus[0] <= d_upper_minus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d_upper_minus[1] <= d_upper_minus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
fixing => ~NO_FANOUT~
write_enable => write_enable.IN5


|Newton_method|On_line_divider:divider|generate_CA_REG:CA_REG|single_clk_ram:ram_p
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
q[2] <= mem.DATAOUT2
q[3] <= mem.DATAOUT3
q[4] <= mem.DATAOUT4
q[5] <= mem.DATAOUT5
q[6] <= mem.DATAOUT6
q[7] <= mem.DATAOUT7
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|On_line_divider:divider|generate_CA_REG:CA_REG|single_clk_ram_2bit:ram1
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|On_line_divider:divider|generate_CA_REG:CA_REG|single_clk_ram_2bit:ram2
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|On_line_divider:divider|generate_CA_REG:CA_REG|single_clk_ram_2bit:ram3
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|On_line_divider:divider|generate_CA_REG:CA_REG|single_clk_ram_2bit:ram4
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|On_line_divider:divider|SDVM:selector1
vec_in_plus[0] => Mux3.IN3
vec_in_plus[0] => Mux3.IN2
vec_in_plus[1] => Mux2.IN3
vec_in_plus[1] => Mux2.IN2
vec_in_plus[2] => Mux1.IN3
vec_in_plus[2] => Mux1.IN2
vec_in_plus[3] => Mux0.IN3
vec_in_plus[3] => Mux0.IN2
vec_in_minus[0] => Mux7.IN3
vec_in_minus[0] => Mux7.IN2
vec_in_minus[1] => Mux6.IN3
vec_in_minus[1] => Mux6.IN2
vec_in_minus[2] => Mux5.IN3
vec_in_minus[2] => Mux5.IN2
vec_in_minus[3] => Mux4.IN3
vec_in_minus[3] => Mux4.IN2
digit_select[0] => Mux0.IN5
digit_select[0] => Mux1.IN5
digit_select[0] => Mux2.IN5
digit_select[0] => Mux3.IN5
digit_select[0] => Mux4.IN5
digit_select[0] => Mux5.IN5
digit_select[0] => Mux6.IN5
digit_select[0] => Mux7.IN5
digit_select[1] => Mux0.IN4
digit_select[1] => Mux1.IN4
digit_select[1] => Mux2.IN4
digit_select[1] => Mux3.IN4
digit_select[1] => Mux4.IN4
digit_select[1] => Mux5.IN4
digit_select[1] => Mux6.IN4
digit_select[1] => Mux7.IN4
vec_out_plus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
write_enable => ~NO_FANOUT~


|Newton_method|On_line_divider:divider|four_bits_adder:adder1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|On_line_divider:divider|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider:divider|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider:divider|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider:divider|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider:divider|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|D_FF_two_bits:D2
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|On_line_divider:divider|V_value_logic:adder1_logic
cnt_master_dis[0] => Equal5.IN8
cnt_master_dis[0] => Equal6.IN1
cnt_master_dis[1] => Equal5.IN7
cnt_master_dis[1] => Equal6.IN0
cnt_master_dis[2] => Equal5.IN0
cnt_master_dis[2] => Equal6.IN8
cnt_master_dis[3] => Equal5.IN6
cnt_master_dis[3] => Equal6.IN7
cnt_master_dis[4] => Equal5.IN5
cnt_master_dis[4] => Equal6.IN6
cnt_master_dis[5] => Equal5.IN4
cnt_master_dis[5] => Equal6.IN5
cnt_master_dis[6] => Equal5.IN3
cnt_master_dis[6] => Equal6.IN4
cnt_master_dis[7] => Equal5.IN2
cnt_master_dis[7] => Equal6.IN3
cnt_master_dis[8] => Equal5.IN1
cnt_master_dis[8] => Equal6.IN2
x_value[0] => Add1.IN5
x_value[1] => Add0.IN5
v_plus[0] => LessThan0.IN4
v_plus[0] => Add4.IN8
v_plus[0] => v_plus_new[0].DATAIN
v_plus[1] => LessThan0.IN3
v_plus[1] => Add4.IN7
v_plus[1] => v_plus_new[1].DATAIN
v_plus[2] => Add0.IN4
v_plus[2] => v_plus_new.DATAA
v_plus[3] => Add0.IN3
v_plus[3] => v_plus_new.DATAA
v_minus[0] => LessThan0.IN8
v_minus[0] => LessThan1.IN8
v_minus[0] => v_minus_new[0].DATAIN
v_minus[1] => LessThan0.IN7
v_minus[1] => LessThan1.IN7
v_minus[1] => v_minus_new[1].DATAIN
v_minus[2] => Add1.IN4
v_minus[2] => v_minus_new.DATAA
v_minus[3] => Add1.IN3
v_minus[3] => v_minus_new.DATAA
v_plus_new[0] <= v_plus[0].DB_MAX_OUTPUT_PORT_TYPE
v_plus_new[1] <= v_plus[1].DB_MAX_OUTPUT_PORT_TYPE
v_plus_new[2] <= v_plus_new.DB_MAX_OUTPUT_PORT_TYPE
v_plus_new[3] <= v_plus_new.DB_MAX_OUTPUT_PORT_TYPE
v_minus_new[0] <= v_minus[0].DB_MAX_OUTPUT_PORT_TYPE
v_minus_new[1] <= v_minus[1].DB_MAX_OUTPUT_PORT_TYPE
v_minus_new[2] <= v_minus_new.DB_MAX_OUTPUT_PORT_TYPE
v_minus_new[3] <= v_minus_new.DB_MAX_OUTPUT_PORT_TYPE
clk => borrow_stored.CLK
clk => cin[0]~reg0.CLK
clk => cin[1]~reg0.CLK
clk => stay.CLK
cnt_master[0] => Equal2.IN8
cnt_master[0] => Equal3.IN1
cnt_master[1] => Equal2.IN7
cnt_master[1] => Equal3.IN0
cnt_master[2] => Equal2.IN0
cnt_master[3] => Equal2.IN6
cnt_master[4] => Equal2.IN5
cnt_master[5] => Equal2.IN4
cnt_master[6] => Equal2.IN3
cnt_master[7] => Equal2.IN2
cnt_master[8] => Equal2.IN1
computation_cycle[0] => Equal1.IN6
computation_cycle[1] => Equal1.IN5
computation_cycle[2] => Equal1.IN4
computation_cycle[3] => Equal1.IN3
computation_cycle[4] => Equal1.IN2
computation_cycle[5] => Equal1.IN1
computation_cycle[6] => Equal1.IN0
STATE[0] => Mux0.IN5
STATE[0] => Decoder0.IN1
STATE[0] => Equal0.IN0
STATE[0] => Equal4.IN1
STATE[1] => Mux0.IN4
STATE[1] => Decoder0.IN0
STATE[1] => Equal0.IN1
STATE[1] => Equal4.IN0
v_upper_plus[0] => Add2.IN6
v_upper_plus[1] => Add2.IN5
v_upper_plus[2] => Add2.IN4
v_upper_plus[3] => Add2.IN3
v_upper_minus[0] => Add3.IN6
v_upper_minus[1] => Add3.IN5
v_upper_minus[2] => Add3.IN4
v_upper_minus[3] => Add3.IN3
cout[0] => cin.DATAB
cout[0] => Add1.IN6
cout[1] => cin.DATAB
cout[1] => Add0.IN6
v_upper_plus_result[0] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
v_upper_plus_result[1] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
v_upper_plus_result[2] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
v_upper_plus_result[3] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
v_upper_minus_result[0] <= Add3.DB_MAX_OUTPUT_PORT_TYPE
v_upper_minus_result[1] <= Add3.DB_MAX_OUTPUT_PORT_TYPE
v_upper_minus_result[2] <= Add3.DB_MAX_OUTPUT_PORT_TYPE
v_upper_minus_result[3] <= Add3.DB_MAX_OUTPUT_PORT_TYPE
cin[0] <= cin[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cin[1] <= cin[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
borrower_up <= borrower_up.DB_MAX_OUTPUT_PORT_TYPE
write_enable => stay.ENA
write_enable => cin[1]~reg0.ENA
write_enable => borrow_stored.ENA
write_enable => cin[0]~reg0.ENA
carry_feedback <= carry_feedback.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|SDVM:selector2
vec_in_plus[0] => Mux3.IN3
vec_in_plus[0] => Mux3.IN2
vec_in_plus[1] => Mux2.IN3
vec_in_plus[1] => Mux2.IN2
vec_in_plus[2] => Mux1.IN3
vec_in_plus[2] => Mux1.IN2
vec_in_plus[3] => Mux0.IN3
vec_in_plus[3] => Mux0.IN2
vec_in_minus[0] => Mux7.IN3
vec_in_minus[0] => Mux7.IN2
vec_in_minus[1] => Mux6.IN3
vec_in_minus[1] => Mux6.IN2
vec_in_minus[2] => Mux5.IN3
vec_in_minus[2] => Mux5.IN2
vec_in_minus[3] => Mux4.IN3
vec_in_minus[3] => Mux4.IN2
digit_select[0] => Mux0.IN5
digit_select[0] => Mux1.IN5
digit_select[0] => Mux2.IN5
digit_select[0] => Mux3.IN5
digit_select[0] => Mux4.IN5
digit_select[0] => Mux5.IN5
digit_select[0] => Mux6.IN5
digit_select[0] => Mux7.IN5
digit_select[1] => Mux0.IN4
digit_select[1] => Mux1.IN4
digit_select[1] => Mux2.IN4
digit_select[1] => Mux3.IN4
digit_select[1] => Mux4.IN4
digit_select[1] => Mux5.IN4
digit_select[1] => Mux6.IN4
digit_select[1] => Mux7.IN4
vec_out_plus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
write_enable => ~NO_FANOUT~


|Newton_method|On_line_divider:divider|V_block:Sample
v_value_upper_plus[0] => Add0.IN8
v_value_upper_plus[1] => Add0.IN7
v_value_upper_plus[2] => Add0.IN6
v_value_upper_plus[3] => Add0.IN5
v_value_upper_minus[0] => Add0.IN4
v_value_upper_minus[1] => Add0.IN3
v_value_upper_minus[2] => Add0.IN2
v_value_upper_minus[3] => Add0.IN1
estimated_q[0] <= estimated_q.DB_MAX_OUTPUT_PORT_TYPE
estimated_q[1] <= estimated_q.DB_MAX_OUTPUT_PORT_TYPE
borrower_up => Add1.IN8
fixing => estimated_q.OUTPUTSELECT
fixing => estimated_q.OUTPUTSELECT
pre_p_value[0] => estimated_q.DATAA
pre_p_value[1] => estimated_q.DATAA


|Newton_method|On_line_divider:divider|four_bits_adder:adder2
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|On_line_divider:divider|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider:divider|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider:divider|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider:divider|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider:divider|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block
STATE[0] => Mux0.IN4
STATE[0] => Mux1.IN4
STATE[0] => Mux2.IN4
STATE[0] => Mux3.IN4
STATE[0] => Mux4.IN3
STATE[0] => Mux5.IN3
STATE[0] => Mux6.IN3
STATE[0] => Mux7.IN3
STATE[0] => Mux8.IN3
STATE[0] => Mux9.IN3
STATE[0] => Mux10.IN3
STATE[0] => Mux11.IN3
STATE[0] => Mux12.IN5
STATE[0] => Mux13.IN5
STATE[0] => Mux14.IN4
STATE[0] => Mux15.IN4
STATE[0] => Mux16.IN4
STATE[0] => Mux17.IN4
STATE[0] => Mux18.IN4
STATE[0] => Mux19.IN4
STATE[0] => Mux20.IN4
STATE[0] => Mux21.IN4
STATE[0] => Decoder0.IN1
STATE[0] => Equal4.IN1
STATE[0] => Equal5.IN1
STATE[0] => Equal6.IN0
STATE[0] => Equal8.IN1
STATE[1] => Mux0.IN3
STATE[1] => Mux1.IN3
STATE[1] => Mux2.IN3
STATE[1] => Mux3.IN3
STATE[1] => Mux4.IN2
STATE[1] => Mux5.IN2
STATE[1] => Mux6.IN2
STATE[1] => Mux7.IN2
STATE[1] => Mux8.IN2
STATE[1] => Mux9.IN2
STATE[1] => Mux10.IN2
STATE[1] => Mux11.IN2
STATE[1] => Mux12.IN4
STATE[1] => Mux13.IN4
STATE[1] => Mux14.IN3
STATE[1] => Mux15.IN3
STATE[1] => Mux16.IN3
STATE[1] => Mux17.IN3
STATE[1] => Mux18.IN3
STATE[1] => Mux19.IN3
STATE[1] => Mux20.IN3
STATE[1] => Mux21.IN3
STATE[1] => Decoder0.IN0
STATE[1] => Equal4.IN0
STATE[1] => Equal5.IN0
STATE[1] => Equal6.IN1
STATE[1] => Equal8.IN0
cnt_master[0] => Equal1.IN8
cnt_master[0] => Equal2.IN1
cnt_master[1] => Equal1.IN7
cnt_master[1] => Equal2.IN0
cnt_master[2] => Equal7.IN6
cnt_master[2] => Add0.IN14
cnt_master[2] => Equal1.IN0
cnt_master[3] => Equal7.IN5
cnt_master[3] => Add0.IN13
cnt_master[3] => Equal1.IN6
cnt_master[4] => Equal7.IN4
cnt_master[4] => Add0.IN12
cnt_master[4] => Equal1.IN5
cnt_master[5] => Equal7.IN3
cnt_master[5] => Add0.IN11
cnt_master[5] => Equal1.IN4
cnt_master[6] => Equal7.IN2
cnt_master[6] => Add0.IN10
cnt_master[6] => Equal1.IN3
cnt_master[7] => Equal7.IN1
cnt_master[7] => Add0.IN9
cnt_master[7] => Equal1.IN2
cnt_master[8] => Equal7.IN0
cnt_master[8] => Add0.IN8
cnt_master[8] => Equal1.IN1
computation_cycle[0] => Equal3.IN13
computation_cycle[0] => Equal7.IN13
computation_cycle[0] => Add1.IN14
computation_cycle[0] => wr_addr.DATAA
computation_cycle[0] => Add2.IN14
computation_cycle[0] => rd_addr.DATAA
computation_cycle[0] => rd_addr.DATAB
computation_cycle[0] => Mux21.IN5
computation_cycle[0] => rd_addr.DATAA
computation_cycle[0] => Equal0.IN6
computation_cycle[1] => Equal3.IN12
computation_cycle[1] => Equal7.IN12
computation_cycle[1] => Add1.IN13
computation_cycle[1] => wr_addr.DATAA
computation_cycle[1] => Add2.IN13
computation_cycle[1] => rd_addr.DATAA
computation_cycle[1] => rd_addr.DATAB
computation_cycle[1] => Mux20.IN5
computation_cycle[1] => rd_addr.DATAA
computation_cycle[1] => Equal0.IN5
computation_cycle[2] => Equal3.IN11
computation_cycle[2] => Equal7.IN11
computation_cycle[2] => Add1.IN12
computation_cycle[2] => wr_addr.DATAA
computation_cycle[2] => Add2.IN12
computation_cycle[2] => rd_addr.DATAA
computation_cycle[2] => rd_addr.DATAB
computation_cycle[2] => Mux19.IN5
computation_cycle[2] => rd_addr.DATAA
computation_cycle[2] => Equal0.IN4
computation_cycle[3] => Equal3.IN10
computation_cycle[3] => Equal7.IN10
computation_cycle[3] => Add1.IN11
computation_cycle[3] => wr_addr.DATAA
computation_cycle[3] => Add2.IN11
computation_cycle[3] => rd_addr.DATAA
computation_cycle[3] => rd_addr.DATAB
computation_cycle[3] => Mux18.IN5
computation_cycle[3] => rd_addr.DATAA
computation_cycle[3] => Equal0.IN3
computation_cycle[4] => Equal3.IN9
computation_cycle[4] => Equal7.IN9
computation_cycle[4] => Add1.IN10
computation_cycle[4] => wr_addr.DATAA
computation_cycle[4] => Add2.IN10
computation_cycle[4] => rd_addr.DATAA
computation_cycle[4] => rd_addr.DATAB
computation_cycle[4] => Mux17.IN5
computation_cycle[4] => rd_addr.DATAA
computation_cycle[4] => Equal0.IN2
computation_cycle[5] => Equal3.IN8
computation_cycle[5] => Equal7.IN8
computation_cycle[5] => Add1.IN9
computation_cycle[5] => wr_addr.DATAA
computation_cycle[5] => Add2.IN9
computation_cycle[5] => rd_addr.DATAA
computation_cycle[5] => rd_addr.DATAB
computation_cycle[5] => Mux16.IN5
computation_cycle[5] => rd_addr.DATAA
computation_cycle[5] => Equal0.IN1
computation_cycle[6] => Equal3.IN7
computation_cycle[6] => Equal7.IN7
computation_cycle[6] => Add1.IN8
computation_cycle[6] => wr_addr.DATAA
computation_cycle[6] => Add2.IN8
computation_cycle[6] => rd_addr.DATAA
computation_cycle[6] => rd_addr.DATAB
computation_cycle[6] => Mux15.IN5
computation_cycle[6] => rd_addr.DATAA
computation_cycle[6] => Equal0.IN0
clk => clk.IN1
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => Mux14.IN5
v_upper_plus[0] => v_upper_plus[0].IN1
v_upper_plus[1] => v_upper_plus[1].IN1
v_upper_plus[2] => v_upper_plus[2].IN1
v_upper_plus[3] => v_upper_plus[3].IN1
v_upper_minus[0] => v_upper_minus[0].IN1
v_upper_minus[1] => v_upper_minus[1].IN1
v_upper_minus[2] => v_upper_minus[2].IN1
v_upper_minus[3] => v_upper_minus[3].IN1
d_plus_selected[0] => d_plus_controlled.DATAB
d_plus_selected[0] => d_plus_controlled.DATAA
d_plus_selected[0] => d_plus_controlled.DATAB
d_plus_selected[0] => Mux7.IN4
d_plus_selected[0] => Mux7.IN5
d_plus_selected[1] => d_plus_controlled.DATAB
d_plus_selected[1] => d_plus_controlled.DATAA
d_plus_selected[1] => d_plus_controlled.DATAB
d_plus_selected[1] => Mux6.IN4
d_plus_selected[1] => Mux6.IN5
d_plus_selected[2] => d_plus_controlled.DATAB
d_plus_selected[2] => d_plus_controlled.DATAA
d_plus_selected[2] => d_plus_controlled.DATAB
d_plus_selected[2] => Mux5.IN4
d_plus_selected[2] => Mux5.IN5
d_plus_selected[3] => d_plus_controlled.DATAB
d_plus_selected[3] => d_plus_controlled.DATAA
d_plus_selected[3] => d_plus_controlled.DATAB
d_plus_selected[3] => Mux4.IN4
d_plus_selected[3] => Mux4.IN5
d_minus_selected[0] => d_minus_controlled.DATAB
d_minus_selected[0] => d_minus_controlled.DATAA
d_minus_selected[0] => d_minus_controlled.DATAB
d_minus_selected[0] => Mux11.IN4
d_minus_selected[0] => Mux11.IN5
d_minus_selected[1] => d_minus_controlled.DATAB
d_minus_selected[1] => d_minus_controlled.DATAA
d_minus_selected[1] => d_minus_controlled.DATAB
d_minus_selected[1] => Mux10.IN4
d_minus_selected[1] => Mux10.IN5
d_minus_selected[2] => d_minus_controlled.DATAB
d_minus_selected[2] => d_minus_controlled.DATAA
d_minus_selected[2] => d_minus_controlled.DATAB
d_minus_selected[2] => Mux9.IN4
d_minus_selected[2] => Mux9.IN5
d_minus_selected[3] => d_minus_controlled.DATAB
d_minus_selected[3] => d_minus_controlled.DATAA
d_minus_selected[3] => d_minus_controlled.DATAB
d_minus_selected[3] => Mux8.IN4
d_minus_selected[3] => Mux8.IN5
w_plus_res[0] => w_plus_shifted.DATAB
w_plus_res[0] => w_plus_shifted.DATAA
w_plus_res[0] => w_plus_shifted.DATAB
w_plus_res[1] => w_plus_shifted.DATAB
w_plus_res[1] => w_plus_shifted.DATAA
w_plus_res[1] => w_plus_shifted.DATAB
w_plus_res[2] => w_plus_shifted.DATAB
w_plus_res[2] => w_plus_shifted.DATAA
w_plus_res[2] => w_plus_shifted.DATAB
w_plus_res[3] => w_plus_shifted.DATAA
w_plus_res[3] => tmp_shift_out.DATAB
w_plus_res[3] => tmp_shift_out[1].DATAB
w_minus_res[0] => w_minus_shifted.DATAB
w_minus_res[0] => w_minus_shifted.DATAA
w_minus_res[0] => w_minus_shifted.DATAB
w_minus_res[1] => w_minus_shifted.DATAB
w_minus_res[1] => w_minus_shifted.DATAA
w_minus_res[1] => w_minus_shifted.DATAB
w_minus_res[2] => w_minus_shifted.DATAB
w_minus_res[2] => w_minus_shifted.DATAA
w_minus_res[2] => w_minus_shifted.DATAB
w_minus_res[3] => w_minus_shifted.DATAA
w_minus_res[3] => tmp_shift_out.DATAB
w_minus_res[3] => tmp_shift_out[0].DATAB
d_plus_controlled[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
d_plus_controlled[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
d_plus_controlled[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
d_plus_controlled[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
d_minus_controlled[0] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
d_minus_controlled[1] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
d_minus_controlled[2] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
d_minus_controlled[3] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
residue_plus[0] <= w_value_ram:w_ram.port5
residue_plus[1] <= w_value_ram:w_ram.port5
residue_plus[2] <= w_value_ram:w_ram.port5
residue_plus[3] <= w_value_ram:w_ram.port5
residue_minus[0] <= w_value_ram:w_ram.port5
residue_minus[1] <= w_value_ram:w_ram.port5
residue_minus[2] <= w_value_ram:w_ram.port5
residue_minus[3] <= w_value_ram:w_ram.port5
res_upper_plus[0] <= res_upper_plus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_plus[1] <= res_upper_plus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_plus[2] <= res_upper_plus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_plus[3] <= res_upper_plus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_minus[0] <= res_upper_minus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_minus[1] <= res_upper_minus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_minus[2] <= res_upper_minus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_minus[3] <= res_upper_minus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cout_two[0] => cin_two.DATAB
cout_two[0] => cin_three.DATAB
cout_two[1] => cin_two.DATAB
cout_two[1] => cin_three.DATAB
cin_two[0] <= cin_two[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cin_two[1] <= cin_two[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_addr[0] <= rd_addr[0].DB_MAX_OUTPUT_PORT_TYPE
rd_addr[1] <= rd_addr[1].DB_MAX_OUTPUT_PORT_TYPE
rd_addr[2] <= rd_addr[2].DB_MAX_OUTPUT_PORT_TYPE
rd_addr[3] <= rd_addr[3].DB_MAX_OUTPUT_PORT_TYPE
rd_addr[4] <= rd_addr[4].DB_MAX_OUTPUT_PORT_TYPE
rd_addr[5] <= rd_addr[5].DB_MAX_OUTPUT_PORT_TYPE
rd_addr[6] <= rd_addr[6].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[0] <= wr_addr[0].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[1] <= wr_addr[1].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[2] <= wr_addr[2].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[3] <= wr_addr[3].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[4] <= wr_addr[4].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[5] <= wr_addr[5].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[6] <= wr_addr[6].DB_MAX_OUTPUT_PORT_TYPE
d_upper_plus[0] => d_upper_plus[0].IN1
d_upper_plus[1] => d_upper_plus[1].IN1
d_upper_minus[0] => d_upper_minus[0].IN1
d_upper_minus[1] => d_upper_minus[1].IN1
q_value[0] => _.IN1
q_value[1] => _.IN1
error_flag => res_upper_plus.OUTPUTSELECT
error_flag => res_upper_plus.OUTPUTSELECT
error_flag => res_upper_plus.OUTPUTSELECT
error_flag => res_upper_plus.OUTPUTSELECT
error_flag => res_upper_minus.OUTPUTSELECT
error_flag => res_upper_minus.OUTPUTSELECT
error_flag => res_upper_minus.OUTPUTSELECT
error_flag => res_upper_minus.OUTPUTSELECT
error_flag => Mux14.IN1
write_enable => write_enable.IN1


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|SDVM_3bit:selector3
vec_in_plus[0] => Mux1.IN3
vec_in_plus[0] => Mux1.IN2
vec_in_plus[1] => Mux0.IN3
vec_in_plus[1] => Mux0.IN2
vec_in_minus[0] => Mux3.IN3
vec_in_minus[0] => Mux3.IN2
vec_in_minus[1] => Mux2.IN3
vec_in_minus[1] => Mux2.IN2
digit_select[0] => Mux0.IN5
digit_select[0] => Mux1.IN5
digit_select[0] => Mux2.IN5
digit_select[0] => Mux3.IN5
digit_select[1] => Mux0.IN4
digit_select[1] => Mux1.IN4
digit_select[1] => Mux2.IN4
digit_select[1] => Mux3.IN4
vec_out_plus[0] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|six_bits_adder:adder
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider:divider|w_value_logic_fix:W_block|w_value_ram:w_ram
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
q[2] <= mem.DATAOUT2
q[3] <= mem.DATAOUT3
q[4] <= mem.DATAOUT4
q[5] <= mem.DATAOUT5
q[6] <= mem.DATAOUT6
q[7] <= mem.DATAOUT7
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|Multiplier_stage_two:mul3
x[0] => x[0].IN2
x[1] => x[1].IN2
y[0] => y[0].IN2
y[1] => y[1].IN2
p[0] <= p[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p[1] <= p[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => clk.IN7
STATE[0] <= STATE[0].DB_MAX_OUTPUT_PORT_TYPE
STATE[1] <= STATE[1].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[0] <= computation_cycle[0].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[1] <= computation_cycle[1].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[2] <= computation_cycle[2].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[3] <= computation_cycle[3].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[4] <= computation_cycle[4].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[5] <= computation_cycle[5].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[6] <= computation_cycle[6].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[0] <= cnt_master[0].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[1] <= cnt_master[1].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[2] <= cnt_master[2].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[3] <= cnt_master[3].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[4] <= cnt_master[4].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[5] <= cnt_master[5].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[6] <= cnt_master[6].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[7] <= cnt_master[7].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[8] <= cnt_master[8].DB_MAX_OUTPUT_PORT_TYPE
In_vd => always1.IN1
Out_rd => always1.IN1
In_rd <= In_rd~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_vd <= Out_vd~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|counter:main_counter
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
clk => cnt[0]~reg0.CLK
clk => cnt[1]~reg0.CLK
clk => cnt[2]~reg0.CLK
clk => cnt[3]~reg0.CLK
clk => cnt[4]~reg0.CLK
clk => cnt[5]~reg0.CLK
clk => cnt[6]~reg0.CLK
clk => cnt[7]~reg0.CLK
clk => cnt[8]~reg0.CLK
cnt[0] <= cnt[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[1] <= cnt[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[2] <= cnt[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[3] <= cnt[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[4] <= cnt[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[5] <= cnt[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[6] <= cnt[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[7] <= cnt[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[8] <= cnt[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => cnt[0]~reg0.ENA
write_enable => cnt[1]~reg0.ENA
write_enable => cnt[2]~reg0.ENA
write_enable => cnt[3]~reg0.ENA
write_enable => cnt[4]~reg0.ENA
write_enable => cnt[5]~reg0.ENA
write_enable => cnt[6]~reg0.ENA
write_enable => cnt[7]~reg0.ENA
write_enable => cnt[8]~reg0.ENA


|Newton_method|Multiplier_stage_two:mul3|computation_control_mul:FSM
cnt_master[0] => Equal0.IN1
cnt_master[0] => Equal1.IN8
cnt_master[0] => Equal3.IN1
cnt_master[1] => Equal0.IN0
cnt_master[1] => Equal1.IN7
cnt_master[1] => Equal3.IN0
cnt_master[2] => computation_cycle.DATAB
cnt_master[2] => Add1.IN14
cnt_master[2] => computation_cycle.DATAA
cnt_master[2] => Mux9.IN5
cnt_master[2] => Equal0.IN8
cnt_master[2] => Equal1.IN0
cnt_master[3] => computation_cycle.DATAB
cnt_master[3] => Add1.IN13
cnt_master[3] => computation_cycle.DATAA
cnt_master[3] => Mux8.IN5
cnt_master[3] => Equal0.IN7
cnt_master[3] => Equal1.IN6
cnt_master[4] => computation_cycle.DATAB
cnt_master[4] => Add1.IN12
cnt_master[4] => computation_cycle.DATAA
cnt_master[4] => Mux7.IN5
cnt_master[4] => Equal0.IN6
cnt_master[4] => Equal1.IN5
cnt_master[5] => computation_cycle.DATAB
cnt_master[5] => Add1.IN11
cnt_master[5] => computation_cycle.DATAA
cnt_master[5] => Mux6.IN5
cnt_master[5] => Equal0.IN5
cnt_master[5] => Equal1.IN4
cnt_master[6] => computation_cycle.DATAB
cnt_master[6] => Add1.IN10
cnt_master[6] => computation_cycle.DATAA
cnt_master[6] => Mux5.IN5
cnt_master[6] => Equal0.IN4
cnt_master[6] => Equal1.IN3
cnt_master[7] => computation_cycle.DATAB
cnt_master[7] => Add1.IN9
cnt_master[7] => computation_cycle.DATAA
cnt_master[7] => Mux4.IN5
cnt_master[7] => Equal0.IN3
cnt_master[7] => Equal1.IN2
cnt_master[8] => computation_cycle.DATAB
cnt_master[8] => Add1.IN8
cnt_master[8] => computation_cycle.DATAA
cnt_master[8] => Mux3.IN5
cnt_master[8] => Equal0.IN2
cnt_master[8] => Equal1.IN1
clk => computation_cycle[0]~reg0.CLK
clk => computation_cycle[1]~reg0.CLK
clk => computation_cycle[2]~reg0.CLK
clk => computation_cycle[3]~reg0.CLK
clk => computation_cycle[4]~reg0.CLK
clk => computation_cycle[5]~reg0.CLK
clk => computation_cycle[6]~reg0.CLK
clk => STATE[0]~reg0.CLK
clk => STATE[1]~reg0.CLK
clk => we~reg0.CLK
clk => stay~3.DATAIN
computation_cycle[0] <= computation_cycle[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[1] <= computation_cycle[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[2] <= computation_cycle[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[3] <= computation_cycle[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[4] <= computation_cycle[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[5] <= computation_cycle[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[6] <= computation_cycle[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_for_input <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
we <= we~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[0] <= STATE[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[1] <= STATE[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => stay.OUTPUTSELECT
write_enable => stay.OUTPUTSELECT
write_enable => computation_cycle[0]~reg0.ENA
write_enable => computation_cycle[1]~reg0.ENA
write_enable => computation_cycle[2]~reg0.ENA
write_enable => computation_cycle[3]~reg0.ENA
write_enable => computation_cycle[4]~reg0.ENA
write_enable => computation_cycle[5]~reg0.ENA
write_enable => computation_cycle[6]~reg0.ENA
write_enable => STATE[0]~reg0.ENA
write_enable => STATE[1]~reg0.ENA
write_enable => we~reg0.ENA


|Newton_method|Multiplier_stage_two:mul3|generate_CA_REG_mul:CA_REG
computation_cycles[0] => addr[0].IN1
computation_cycles[1] => addr[1].IN1
computation_cycles[2] => addr[2].IN1
computation_cycles[3] => addr[3].IN1
computation_cycles[4] => addr[4].IN1
computation_cycles[5] => addr[5].IN1
computation_cycles[6] => addr[6].IN1
x_input[0] => tmp_write_data.DATAB
x_input[0] => tmp_write_data.DATAB
x_input[0] => tmp_write_data.DATAB
x_input[0] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
x_plus[0] <= single_clk_ram_mul:ram1.port4
x_plus[1] <= single_clk_ram_mul:ram1.port4
x_plus[2] <= single_clk_ram_mul:ram1.port4
x_plus[3] <= single_clk_ram_mul:ram1.port4
x_minus[0] <= single_clk_ram_mul:ram1.port4
x_minus[1] <= single_clk_ram_mul:ram1.port4
x_minus[2] <= single_clk_ram_mul:ram1.port4
x_minus[3] <= single_clk_ram_mul:ram1.port4
y_plus[0] <= single_clk_ram_mul:ram1.port4
y_plus[1] <= single_clk_ram_mul:ram1.port4
y_plus[2] <= single_clk_ram_mul:ram1.port4
y_plus[3] <= single_clk_ram_mul:ram1.port4
y_minus[0] <= single_clk_ram_mul:ram1.port4
y_minus[1] <= single_clk_ram_mul:ram1.port4
y_minus[2] <= single_clk_ram_mul:ram1.port4
y_minus[3] <= single_clk_ram_mul:ram1.port4
clk => clk.IN1
cnt[0] => Decoder0.IN1
cnt[1] => Decoder0.IN0
cnt[2] => ~NO_FANOUT~
cnt[3] => ~NO_FANOUT~
cnt[4] => ~NO_FANOUT~
cnt[5] => ~NO_FANOUT~
cnt[6] => ~NO_FANOUT~
cnt[7] => ~NO_FANOUT~
cnt[8] => ~NO_FANOUT~
we => we.IN1
write_enable => write_enable.IN1


|Newton_method|Multiplier_stage_two:mul3|generate_CA_REG_mul:CA_REG|single_clk_ram_mul:ram1
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7
data[8] => mem.data_a[8].DATAIN
data[8] => mem.DATAIN8
data[9] => mem.data_a[9].DATAIN
data[9] => mem.DATAIN9
data[10] => mem.data_a[10].DATAIN
data[10] => mem.DATAIN10
data[11] => mem.data_a[11].DATAIN
data[11] => mem.DATAIN11
data[12] => mem.data_a[12].DATAIN
data[12] => mem.DATAIN12
data[13] => mem.data_a[13].DATAIN
data[13] => mem.DATAIN13
data[14] => mem.data_a[14].DATAIN
data[14] => mem.DATAIN14
data[15] => mem.data_a[15].DATAIN
data[15] => mem.DATAIN15
addr[0] => mem.waddr_a[0].DATAIN
addr[0] => addr_reg[0].DATAIN
addr[0] => mem.WADDR
addr[1] => mem.waddr_a[1].DATAIN
addr[1] => addr_reg[1].DATAIN
addr[1] => mem.WADDR1
addr[2] => mem.waddr_a[2].DATAIN
addr[2] => addr_reg[2].DATAIN
addr[2] => mem.WADDR2
addr[3] => mem.waddr_a[3].DATAIN
addr[3] => addr_reg[3].DATAIN
addr[3] => mem.WADDR3
addr[4] => mem.waddr_a[4].DATAIN
addr[4] => addr_reg[4].DATAIN
addr[4] => mem.WADDR4
addr[5] => mem.waddr_a[5].DATAIN
addr[5] => addr_reg[5].DATAIN
addr[5] => mem.WADDR5
addr[6] => mem.waddr_a[6].DATAIN
addr[6] => addr_reg[6].DATAIN
addr[6] => mem.WADDR6
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[15].CLK
clk => mem.data_a[14].CLK
clk => mem.data_a[13].CLK
clk => mem.data_a[12].CLK
clk => mem.data_a[11].CLK
clk => mem.data_a[10].CLK
clk => mem.data_a[9].CLK
clk => mem.data_a[8].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
q[2] <= mem.DATAOUT2
q[3] <= mem.DATAOUT3
q[4] <= mem.DATAOUT4
q[5] <= mem.DATAOUT5
q[6] <= mem.DATAOUT6
q[7] <= mem.DATAOUT7
q[8] <= mem.DATAOUT8
q[9] <= mem.DATAOUT9
q[10] <= mem.DATAOUT10
q[11] <= mem.DATAOUT11
q[12] <= mem.DATAOUT12
q[13] <= mem.DATAOUT13
q[14] <= mem.DATAOUT14
q[15] <= mem.DATAOUT15
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|Multiplier_stage_two:mul3|x_string_delay_control:Delay_block
clk => clk.IN2
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
STATES[0] => STATES[0].IN1
STATES[1] => STATES[1].IN1
x_plus_value[0] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_plus_value[1] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_plus_value[2] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_plus_value[3] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[0] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[1] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[2] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[3] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
write_enable => write_enable.IN2


|Newton_method|Multiplier_stage_two:mul3|x_string_delay_control:Delay_block|D_FF_four_bits:D_FF
in_plus[0] => out_plus[0]~reg0.DATAIN
in_plus[1] => out_plus[1]~reg0.DATAIN
in_plus[2] => out_plus[2]~reg0.DATAIN
in_plus[3] => out_plus[3]~reg0.DATAIN
in_minus[0] => out_minus[0]~reg0.DATAIN
in_minus[1] => out_minus[1]~reg0.DATAIN
in_minus[2] => out_minus[2]~reg0.DATAIN
in_minus[3] => out_minus[3]~reg0.DATAIN
clk => out_plus[0]~reg0.CLK
clk => out_plus[1]~reg0.CLK
clk => out_plus[2]~reg0.CLK
clk => out_plus[3]~reg0.CLK
clk => out_minus[0]~reg0.CLK
clk => out_minus[1]~reg0.CLK
clk => out_minus[2]~reg0.CLK
clk => out_minus[3]~reg0.CLK
out_plus[0] <= out_plus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_plus[1] <= out_plus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_plus[2] <= out_plus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_plus[3] <= out_plus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[0] <= out_minus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[1] <= out_minus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[2] <= out_minus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[3] <= out_minus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => out_plus[0]~reg0.ENA
write_enable => out_plus[1]~reg0.ENA
write_enable => out_plus[2]~reg0.ENA
write_enable => out_plus[3]~reg0.ENA
write_enable => out_minus[0]~reg0.ENA
write_enable => out_minus[1]~reg0.ENA
write_enable => out_minus[2]~reg0.ENA
write_enable => out_minus[3]~reg0.ENA


|Newton_method|Multiplier_stage_two:mul3|x_string_delay_control:Delay_block|D_FF_two_bits:D_state
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier_stage_two:mul3|SDVM_mul:selector1
clk => clk.IN1
STATE[0] => ~NO_FANOUT~
STATE[1] => ~NO_FANOUT~
vec_in_plus[0] => Mux3.IN3
vec_in_plus[0] => Mux3.IN2
vec_in_plus[1] => Mux2.IN3
vec_in_plus[1] => Mux2.IN2
vec_in_plus[2] => Mux1.IN3
vec_in_plus[2] => Mux1.IN2
vec_in_plus[3] => Mux0.IN3
vec_in_plus[3] => Mux0.IN2
vec_in_minus[0] => Mux7.IN3
vec_in_minus[0] => Mux7.IN2
vec_in_minus[1] => Mux6.IN3
vec_in_minus[1] => Mux6.IN2
vec_in_minus[2] => Mux5.IN3
vec_in_minus[2] => Mux5.IN2
vec_in_minus[3] => Mux4.IN3
vec_in_minus[3] => Mux4.IN2
digit_select[0] => digit_select[0].IN1
digit_select[1] => digit_select[1].IN1
vec_out_plus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
write_enable => write_enable.IN1


|Newton_method|Multiplier_stage_two:mul3|SDVM_mul:selector1|D_FF_two_bits:D1
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier_stage_two:mul3|SDVM_mul:selector2
clk => clk.IN1
STATE[0] => ~NO_FANOUT~
STATE[1] => ~NO_FANOUT~
vec_in_plus[0] => Mux3.IN3
vec_in_plus[0] => Mux3.IN2
vec_in_plus[1] => Mux2.IN3
vec_in_plus[1] => Mux2.IN2
vec_in_plus[2] => Mux1.IN3
vec_in_plus[2] => Mux1.IN2
vec_in_plus[3] => Mux0.IN3
vec_in_plus[3] => Mux0.IN2
vec_in_minus[0] => Mux7.IN3
vec_in_minus[0] => Mux7.IN2
vec_in_minus[1] => Mux6.IN3
vec_in_minus[1] => Mux6.IN2
vec_in_minus[2] => Mux5.IN3
vec_in_minus[2] => Mux5.IN2
vec_in_minus[3] => Mux4.IN3
vec_in_minus[3] => Mux4.IN2
digit_select[0] => digit_select[0].IN1
digit_select[1] => digit_select[1].IN1
vec_out_plus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
write_enable => write_enable.IN1


|Newton_method|Multiplier_stage_two:mul3|SDVM_mul:selector2|D_FF_two_bits:D1
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic
cnt_master[0] => ~NO_FANOUT~
cnt_master[1] => ~NO_FANOUT~
cnt_master[2] => ~NO_FANOUT~
cnt_master[3] => ~NO_FANOUT~
cnt_master[4] => ~NO_FANOUT~
cnt_master[5] => ~NO_FANOUT~
cnt_master[6] => ~NO_FANOUT~
cnt_master[7] => ~NO_FANOUT~
cnt_master[8] => ~NO_FANOUT~
clk => clk.IN3
p[0] => p[0].IN1
p[1] => p[1].IN1
STATE[0] => Equal0.IN1
STATE[0] => Equal2.IN1
STATE[0] => Equal3.IN0
STATE[0] => Equal4.IN1
STATE[1] => Equal0.IN0
STATE[1] => Equal2.IN0
STATE[1] => Equal3.IN1
STATE[1] => Equal4.IN0
comp_cycle[0] => read_addr[0].IN1
comp_cycle[1] => read_addr[1].IN1
comp_cycle[2] => read_addr[2].IN1
comp_cycle[3] => read_addr[3].IN1
comp_cycle[4] => read_addr[4].IN1
comp_cycle[5] => read_addr[5].IN1
comp_cycle[6] => read_addr[6].IN1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
v_value_plus[0] <= w_plus_shifted[1].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[1] <= w_plus_shifted[2].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[2] <= w_plus_shifted[3].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[3] <= four_bits_parallel_adder:adder1.port6
v_value_plus[4] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[5] <= v_value_plus[5].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[6] <= v_value_plus[6].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[7] <= v_value_plus[7].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[8] <= v_value_plus[8].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[0] <= w_minus_shifted[1].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[1] <= w_minus_shifted[2].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[2] <= w_minus_shifted[3].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[3] <= four_bits_parallel_adder:adder1.port7
v_value_minus[4] <= Add3.DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[5] <= v_value_minus[5].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[6] <= v_value_minus[6].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[7] <= v_value_minus[7].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[8] <= v_value_minus[8].DB_MAX_OUTPUT_PORT_TYPE
write_enable => shift_plus.OUTPUTSELECT
write_enable => shift_minus.OUTPUTSELECT
write_enable => v_upper_minus_tmp[0].ENA
write_enable => v_upper_minus_tmp[1].ENA
write_enable => v_upper_minus_tmp[2].ENA
write_enable => v_upper_minus_tmp[3].ENA
write_enable => v_upper_minus_tmp[4].ENA
write_enable => v_upper_plus_tmp[0].ENA
write_enable => v_upper_plus_tmp[1].ENA
write_enable => v_upper_plus_tmp[2].ENA
write_enable => v_upper_plus_tmp[3].ENA
write_enable => v_upper_plus_tmp[4].ENA


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
residue_plus[0] => residue_plus[0].IN1
residue_plus[1] => residue_plus[1].IN1
residue_plus[2] => residue_plus[2].IN1
residue_plus[3] => residue_plus[3].IN1
residue_minus[0] => residue_minus[0].IN1
residue_minus[1] => residue_minus[1].IN1
residue_minus[2] => residue_minus[2].IN1
residue_minus[3] => residue_minus[3].IN1
results_plus[0] <= four_bits_adder:adder2.port4
results_plus[1] <= four_bits_adder:adder2.port4
results_plus[2] <= four_bits_adder:adder2.port4
results_plus[3] <= four_bits_adder:adder2.port4
results_minus[0] <= four_bits_adder:adder2.port5
results_minus[1] <= four_bits_adder:adder2.port5
results_minus[2] <= four_bits_adder:adder2.port5
results_minus[3] <= four_bits_adder:adder2.port5
cin_one[0] => cin_one[0].IN1
cin_one[1] => cin_one[1].IN1
cin_two[0] => cin_two[0].IN1
cin_two[1] => cin_two[1].IN1
cout_one[0] <= four_bits_adder:adder1.port7
cout_one[1] <= four_bits_adder:adder1.port7
cout_two[0] <= four_bits_adder:adder2.port7
cout_two[1] <= four_bits_adder:adder2.port7


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|D_FF_two_bits:D2
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|D_FF_two_bits:D3
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|M_block:M
sample_plus[0] => Add0.IN8
sample_plus[1] => Add0.IN7
sample_plus[2] => Add0.IN6
sample_plus[3] => Add0.IN5
sample_minus[0] => Add0.IN4
sample_minus[1] => Add0.IN3
sample_minus[2] => Add0.IN2
sample_minus[3] => Add0.IN1
P_value[0] => w_value.IN0
P_value[1] => w_value.IN1
upper_bits_plus[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
upper_bits_plus[1] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
upper_bits_plus[2] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
upper_bits_minus[0] <= <GND>
upper_bits_minus[1] <= <GND>
upper_bits_minus[2] <= <GND>


|Newton_method|Multiplier_stage_two:mul3|Adder_control_logic:adder_control_logic|v_value_ram:v_ram
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.we_a.DATAIN
we => mem.WE
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
q[2] <= mem.DATAOUT2
q[3] <= mem.DATAOUT3
q[4] <= mem.DATAOUT4
q[5] <= mem.DATAOUT5
q[6] <= mem.DATAOUT6
q[7] <= mem.DATAOUT7


|Newton_method|Multiplier_stage_two:mul3|Sample_V:Sample
positive_vec[0] => Add0.IN18
positive_vec[1] => Add0.IN17
positive_vec[2] => Add0.IN16
positive_vec[3] => Add0.IN15
positive_vec[4] => Add0.IN14
positive_vec[5] => Add0.IN13
positive_vec[6] => Add0.IN12
positive_vec[7] => Add0.IN11
positive_vec[8] => Add0.IN10
negative_vec[0] => Add0.IN9
negative_vec[1] => Add0.IN8
negative_vec[2] => Add0.IN7
negative_vec[3] => Add0.IN6
negative_vec[4] => Add0.IN5
negative_vec[5] => Add0.IN4
negative_vec[6] => Add0.IN3
negative_vec[7] => Add0.IN2
negative_vec[8] => Add0.IN1
sample_for_P[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
sample_for_P[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
sample_for_P[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_stage_two:mul3|Selection:V_block
in[0] => Decoder0.IN2
in[1] => Decoder0.IN1
in[2] => Decoder0.IN0
out[0] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|subtraction_three:sub_three
clk => clk.IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
y[0] => inverted_y[0].IN1
y[1] => inverted_y[1].IN1
res[0] <= res[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
In_vld => always0.IN1
In_rdy <= In_rdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_vld <= Out_vld~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_rdy => always0.IN1


|Newton_method|subtraction_three:sub_three|On_line_adder:adder
clk => clk.IN5
enable => enable.IN5
x[0] => x_minus_tmp.IN1
x[1] => x_plus.IN1
y[0] => g_in[0].IN1
y[1] => y_plus.IN1
z[0] <= D_flipflop:D4.port2
z[1] <= D_flipflop:D5.port2


|Newton_method|subtraction_three:sub_three|On_line_adder:adder|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|subtraction_three:sub_three|On_line_adder:adder|D_flipflop:D1
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction_three:sub_three|On_line_adder:adder|D_flipflop:D2
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction_three:sub_three|On_line_adder:adder|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|subtraction_three:sub_three|On_line_adder:adder|D_flipflop:D3
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction_three:sub_three|On_line_adder:adder|D_flipflop:D4
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction_three:sub_three|On_line_adder:adder|D_flipflop:D5
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|Multiplier_four:mul4
x[0] => x[0].IN2
x[1] => x[1].IN2
y[0] => y[0].IN2
y[1] => y[1].IN2
p[0] <= p[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
p[1] <= p[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => clk.IN7
STATE[0] <= STATE[0].DB_MAX_OUTPUT_PORT_TYPE
STATE[1] <= STATE[1].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[0] <= computation_cycle[0].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[1] <= computation_cycle[1].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[2] <= computation_cycle[2].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[3] <= computation_cycle[3].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[4] <= computation_cycle[4].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[5] <= computation_cycle[5].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle_mul[6] <= computation_cycle[6].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[0] <= cnt_master[0].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[1] <= cnt_master[1].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[2] <= cnt_master[2].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[3] <= cnt_master[3].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[4] <= cnt_master[4].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[5] <= cnt_master[5].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[6] <= cnt_master[6].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[7] <= cnt_master[7].DB_MAX_OUTPUT_PORT_TYPE
cnt_mul[8] <= cnt_master[8].DB_MAX_OUTPUT_PORT_TYPE
In_vd => always1.IN1
Out_rd => always1.IN1
In_rd <= In_rd~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_vd <= Out_vd~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|counter:main_counter
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
clk => cnt[0]~reg0.CLK
clk => cnt[1]~reg0.CLK
clk => cnt[2]~reg0.CLK
clk => cnt[3]~reg0.CLK
clk => cnt[4]~reg0.CLK
clk => cnt[5]~reg0.CLK
clk => cnt[6]~reg0.CLK
clk => cnt[7]~reg0.CLK
clk => cnt[8]~reg0.CLK
cnt[0] <= cnt[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[1] <= cnt[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[2] <= cnt[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[3] <= cnt[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[4] <= cnt[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[5] <= cnt[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[6] <= cnt[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[7] <= cnt[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[8] <= cnt[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => cnt[0]~reg0.ENA
write_enable => cnt[1]~reg0.ENA
write_enable => cnt[2]~reg0.ENA
write_enable => cnt[3]~reg0.ENA
write_enable => cnt[4]~reg0.ENA
write_enable => cnt[5]~reg0.ENA
write_enable => cnt[6]~reg0.ENA
write_enable => cnt[7]~reg0.ENA
write_enable => cnt[8]~reg0.ENA


|Newton_method|Multiplier_four:mul4|computation_control_mul:FSM
cnt_master[0] => Equal0.IN1
cnt_master[0] => Equal1.IN8
cnt_master[0] => Equal3.IN1
cnt_master[1] => Equal0.IN0
cnt_master[1] => Equal1.IN7
cnt_master[1] => Equal3.IN0
cnt_master[2] => computation_cycle.DATAB
cnt_master[2] => Add1.IN14
cnt_master[2] => computation_cycle.DATAA
cnt_master[2] => Mux9.IN5
cnt_master[2] => Equal0.IN8
cnt_master[2] => Equal1.IN0
cnt_master[3] => computation_cycle.DATAB
cnt_master[3] => Add1.IN13
cnt_master[3] => computation_cycle.DATAA
cnt_master[3] => Mux8.IN5
cnt_master[3] => Equal0.IN7
cnt_master[3] => Equal1.IN6
cnt_master[4] => computation_cycle.DATAB
cnt_master[4] => Add1.IN12
cnt_master[4] => computation_cycle.DATAA
cnt_master[4] => Mux7.IN5
cnt_master[4] => Equal0.IN6
cnt_master[4] => Equal1.IN5
cnt_master[5] => computation_cycle.DATAB
cnt_master[5] => Add1.IN11
cnt_master[5] => computation_cycle.DATAA
cnt_master[5] => Mux6.IN5
cnt_master[5] => Equal0.IN5
cnt_master[5] => Equal1.IN4
cnt_master[6] => computation_cycle.DATAB
cnt_master[6] => Add1.IN10
cnt_master[6] => computation_cycle.DATAA
cnt_master[6] => Mux5.IN5
cnt_master[6] => Equal0.IN4
cnt_master[6] => Equal1.IN3
cnt_master[7] => computation_cycle.DATAB
cnt_master[7] => Add1.IN9
cnt_master[7] => computation_cycle.DATAA
cnt_master[7] => Mux4.IN5
cnt_master[7] => Equal0.IN3
cnt_master[7] => Equal1.IN2
cnt_master[8] => computation_cycle.DATAB
cnt_master[8] => Add1.IN8
cnt_master[8] => computation_cycle.DATAA
cnt_master[8] => Mux3.IN5
cnt_master[8] => Equal0.IN2
cnt_master[8] => Equal1.IN1
clk => computation_cycle[0]~reg0.CLK
clk => computation_cycle[1]~reg0.CLK
clk => computation_cycle[2]~reg0.CLK
clk => computation_cycle[3]~reg0.CLK
clk => computation_cycle[4]~reg0.CLK
clk => computation_cycle[5]~reg0.CLK
clk => computation_cycle[6]~reg0.CLK
clk => STATE[0]~reg0.CLK
clk => STATE[1]~reg0.CLK
clk => we~reg0.CLK
clk => stay~3.DATAIN
computation_cycle[0] <= computation_cycle[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[1] <= computation_cycle[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[2] <= computation_cycle[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[3] <= computation_cycle[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[4] <= computation_cycle[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[5] <= computation_cycle[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[6] <= computation_cycle[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_for_input <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
we <= we~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[0] <= STATE[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[1] <= STATE[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => stay.OUTPUTSELECT
write_enable => stay.OUTPUTSELECT
write_enable => computation_cycle[0]~reg0.ENA
write_enable => computation_cycle[1]~reg0.ENA
write_enable => computation_cycle[2]~reg0.ENA
write_enable => computation_cycle[3]~reg0.ENA
write_enable => computation_cycle[4]~reg0.ENA
write_enable => computation_cycle[5]~reg0.ENA
write_enable => computation_cycle[6]~reg0.ENA
write_enable => STATE[0]~reg0.ENA
write_enable => STATE[1]~reg0.ENA
write_enable => we~reg0.ENA


|Newton_method|Multiplier_four:mul4|generate_CA_REG_mul:CA_REG
computation_cycles[0] => addr[0].IN1
computation_cycles[1] => addr[1].IN1
computation_cycles[2] => addr[2].IN1
computation_cycles[3] => addr[3].IN1
computation_cycles[4] => addr[4].IN1
computation_cycles[5] => addr[5].IN1
computation_cycles[6] => addr[6].IN1
x_input[0] => tmp_write_data.DATAB
x_input[0] => tmp_write_data.DATAB
x_input[0] => tmp_write_data.DATAB
x_input[0] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
x_input[1] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[0] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
y_input[1] => tmp_write_data.DATAB
x_plus[0] <= single_clk_ram_mul:ram1.port4
x_plus[1] <= single_clk_ram_mul:ram1.port4
x_plus[2] <= single_clk_ram_mul:ram1.port4
x_plus[3] <= single_clk_ram_mul:ram1.port4
x_minus[0] <= single_clk_ram_mul:ram1.port4
x_minus[1] <= single_clk_ram_mul:ram1.port4
x_minus[2] <= single_clk_ram_mul:ram1.port4
x_minus[3] <= single_clk_ram_mul:ram1.port4
y_plus[0] <= single_clk_ram_mul:ram1.port4
y_plus[1] <= single_clk_ram_mul:ram1.port4
y_plus[2] <= single_clk_ram_mul:ram1.port4
y_plus[3] <= single_clk_ram_mul:ram1.port4
y_minus[0] <= single_clk_ram_mul:ram1.port4
y_minus[1] <= single_clk_ram_mul:ram1.port4
y_minus[2] <= single_clk_ram_mul:ram1.port4
y_minus[3] <= single_clk_ram_mul:ram1.port4
clk => clk.IN1
cnt[0] => Decoder0.IN1
cnt[1] => Decoder0.IN0
cnt[2] => ~NO_FANOUT~
cnt[3] => ~NO_FANOUT~
cnt[4] => ~NO_FANOUT~
cnt[5] => ~NO_FANOUT~
cnt[6] => ~NO_FANOUT~
cnt[7] => ~NO_FANOUT~
cnt[8] => ~NO_FANOUT~
we => we.IN1
write_enable => write_enable.IN1


|Newton_method|Multiplier_four:mul4|generate_CA_REG_mul:CA_REG|single_clk_ram_mul:ram1
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7
data[8] => mem.data_a[8].DATAIN
data[8] => mem.DATAIN8
data[9] => mem.data_a[9].DATAIN
data[9] => mem.DATAIN9
data[10] => mem.data_a[10].DATAIN
data[10] => mem.DATAIN10
data[11] => mem.data_a[11].DATAIN
data[11] => mem.DATAIN11
data[12] => mem.data_a[12].DATAIN
data[12] => mem.DATAIN12
data[13] => mem.data_a[13].DATAIN
data[13] => mem.DATAIN13
data[14] => mem.data_a[14].DATAIN
data[14] => mem.DATAIN14
data[15] => mem.data_a[15].DATAIN
data[15] => mem.DATAIN15
addr[0] => mem.waddr_a[0].DATAIN
addr[0] => addr_reg[0].DATAIN
addr[0] => mem.WADDR
addr[1] => mem.waddr_a[1].DATAIN
addr[1] => addr_reg[1].DATAIN
addr[1] => mem.WADDR1
addr[2] => mem.waddr_a[2].DATAIN
addr[2] => addr_reg[2].DATAIN
addr[2] => mem.WADDR2
addr[3] => mem.waddr_a[3].DATAIN
addr[3] => addr_reg[3].DATAIN
addr[3] => mem.WADDR3
addr[4] => mem.waddr_a[4].DATAIN
addr[4] => addr_reg[4].DATAIN
addr[4] => mem.WADDR4
addr[5] => mem.waddr_a[5].DATAIN
addr[5] => addr_reg[5].DATAIN
addr[5] => mem.WADDR5
addr[6] => mem.waddr_a[6].DATAIN
addr[6] => addr_reg[6].DATAIN
addr[6] => mem.WADDR6
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[15].CLK
clk => mem.data_a[14].CLK
clk => mem.data_a[13].CLK
clk => mem.data_a[12].CLK
clk => mem.data_a[11].CLK
clk => mem.data_a[10].CLK
clk => mem.data_a[9].CLK
clk => mem.data_a[8].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
q[2] <= mem.DATAOUT2
q[3] <= mem.DATAOUT3
q[4] <= mem.DATAOUT4
q[5] <= mem.DATAOUT5
q[6] <= mem.DATAOUT6
q[7] <= mem.DATAOUT7
q[8] <= mem.DATAOUT8
q[9] <= mem.DATAOUT9
q[10] <= mem.DATAOUT10
q[11] <= mem.DATAOUT11
q[12] <= mem.DATAOUT12
q[13] <= mem.DATAOUT13
q[14] <= mem.DATAOUT14
q[15] <= mem.DATAOUT15
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|Multiplier_four:mul4|x_string_delay_control:Delay_block
clk => clk.IN2
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
STATES[0] => STATES[0].IN1
STATES[1] => STATES[1].IN1
x_plus_value[0] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_plus_value[1] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_plus_value[2] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_plus_value[3] <= x_plus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[0] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[1] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[2] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
x_minus_value[3] <= x_minus_value.DB_MAX_OUTPUT_PORT_TYPE
write_enable => write_enable.IN2


|Newton_method|Multiplier_four:mul4|x_string_delay_control:Delay_block|D_FF_four_bits:D_FF
in_plus[0] => out_plus[0]~reg0.DATAIN
in_plus[1] => out_plus[1]~reg0.DATAIN
in_plus[2] => out_plus[2]~reg0.DATAIN
in_plus[3] => out_plus[3]~reg0.DATAIN
in_minus[0] => out_minus[0]~reg0.DATAIN
in_minus[1] => out_minus[1]~reg0.DATAIN
in_minus[2] => out_minus[2]~reg0.DATAIN
in_minus[3] => out_minus[3]~reg0.DATAIN
clk => out_plus[0]~reg0.CLK
clk => out_plus[1]~reg0.CLK
clk => out_plus[2]~reg0.CLK
clk => out_plus[3]~reg0.CLK
clk => out_minus[0]~reg0.CLK
clk => out_minus[1]~reg0.CLK
clk => out_minus[2]~reg0.CLK
clk => out_minus[3]~reg0.CLK
out_plus[0] <= out_plus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_plus[1] <= out_plus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_plus[2] <= out_plus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_plus[3] <= out_plus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[0] <= out_minus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[1] <= out_minus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[2] <= out_minus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_minus[3] <= out_minus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => out_plus[0]~reg0.ENA
write_enable => out_plus[1]~reg0.ENA
write_enable => out_plus[2]~reg0.ENA
write_enable => out_plus[3]~reg0.ENA
write_enable => out_minus[0]~reg0.ENA
write_enable => out_minus[1]~reg0.ENA
write_enable => out_minus[2]~reg0.ENA
write_enable => out_minus[3]~reg0.ENA


|Newton_method|Multiplier_four:mul4|x_string_delay_control:Delay_block|D_FF_two_bits:D_state
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier_four:mul4|SDVM_mul:selector1
clk => clk.IN1
STATE[0] => ~NO_FANOUT~
STATE[1] => ~NO_FANOUT~
vec_in_plus[0] => Mux3.IN3
vec_in_plus[0] => Mux3.IN2
vec_in_plus[1] => Mux2.IN3
vec_in_plus[1] => Mux2.IN2
vec_in_plus[2] => Mux1.IN3
vec_in_plus[2] => Mux1.IN2
vec_in_plus[3] => Mux0.IN3
vec_in_plus[3] => Mux0.IN2
vec_in_minus[0] => Mux7.IN3
vec_in_minus[0] => Mux7.IN2
vec_in_minus[1] => Mux6.IN3
vec_in_minus[1] => Mux6.IN2
vec_in_minus[2] => Mux5.IN3
vec_in_minus[2] => Mux5.IN2
vec_in_minus[3] => Mux4.IN3
vec_in_minus[3] => Mux4.IN2
digit_select[0] => digit_select[0].IN1
digit_select[1] => digit_select[1].IN1
vec_out_plus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
write_enable => write_enable.IN1


|Newton_method|Multiplier_four:mul4|SDVM_mul:selector1|D_FF_two_bits:D1
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier_four:mul4|SDVM_mul:selector2
clk => clk.IN1
STATE[0] => ~NO_FANOUT~
STATE[1] => ~NO_FANOUT~
vec_in_plus[0] => Mux3.IN3
vec_in_plus[0] => Mux3.IN2
vec_in_plus[1] => Mux2.IN3
vec_in_plus[1] => Mux2.IN2
vec_in_plus[2] => Mux1.IN3
vec_in_plus[2] => Mux1.IN2
vec_in_plus[3] => Mux0.IN3
vec_in_plus[3] => Mux0.IN2
vec_in_minus[0] => Mux7.IN3
vec_in_minus[0] => Mux7.IN2
vec_in_minus[1] => Mux6.IN3
vec_in_minus[1] => Mux6.IN2
vec_in_minus[2] => Mux5.IN3
vec_in_minus[2] => Mux5.IN2
vec_in_minus[3] => Mux4.IN3
vec_in_minus[3] => Mux4.IN2
digit_select[0] => digit_select[0].IN1
digit_select[1] => digit_select[1].IN1
vec_out_plus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
write_enable => write_enable.IN1


|Newton_method|Multiplier_four:mul4|SDVM_mul:selector2|D_FF_two_bits:D1
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic
cnt_master[0] => ~NO_FANOUT~
cnt_master[1] => ~NO_FANOUT~
cnt_master[2] => ~NO_FANOUT~
cnt_master[3] => ~NO_FANOUT~
cnt_master[4] => ~NO_FANOUT~
cnt_master[5] => ~NO_FANOUT~
cnt_master[6] => ~NO_FANOUT~
cnt_master[7] => ~NO_FANOUT~
cnt_master[8] => ~NO_FANOUT~
clk => clk.IN3
p[0] => p[0].IN1
p[1] => p[1].IN1
STATE[0] => Equal0.IN1
STATE[0] => Equal2.IN1
STATE[0] => Equal3.IN0
STATE[0] => Equal4.IN1
STATE[1] => Equal0.IN0
STATE[1] => Equal2.IN0
STATE[1] => Equal3.IN1
STATE[1] => Equal4.IN0
comp_cycle[0] => read_addr[0].IN1
comp_cycle[1] => read_addr[1].IN1
comp_cycle[2] => read_addr[2].IN1
comp_cycle[3] => read_addr[3].IN1
comp_cycle[4] => read_addr[4].IN1
comp_cycle[5] => read_addr[5].IN1
comp_cycle[6] => read_addr[6].IN1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
v_value_plus[0] <= w_plus_shifted[1].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[1] <= w_plus_shifted[2].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[2] <= w_plus_shifted[3].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[3] <= four_bits_parallel_adder:adder1.port6
v_value_plus[4] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[5] <= v_value_plus[5].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[6] <= v_value_plus[6].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[7] <= v_value_plus[7].DB_MAX_OUTPUT_PORT_TYPE
v_value_plus[8] <= v_value_plus[8].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[0] <= w_minus_shifted[1].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[1] <= w_minus_shifted[2].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[2] <= w_minus_shifted[3].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[3] <= four_bits_parallel_adder:adder1.port7
v_value_minus[4] <= Add3.DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[5] <= v_value_minus[5].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[6] <= v_value_minus[6].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[7] <= v_value_minus[7].DB_MAX_OUTPUT_PORT_TYPE
v_value_minus[8] <= v_value_minus[8].DB_MAX_OUTPUT_PORT_TYPE
write_enable => shift_plus.OUTPUTSELECT
write_enable => shift_minus.OUTPUTSELECT
write_enable => v_upper_minus_tmp[0].ENA
write_enable => v_upper_minus_tmp[1].ENA
write_enable => v_upper_minus_tmp[2].ENA
write_enable => v_upper_minus_tmp[3].ENA
write_enable => v_upper_minus_tmp[4].ENA
write_enable => v_upper_plus_tmp[0].ENA
write_enable => v_upper_plus_tmp[1].ENA
write_enable => v_upper_plus_tmp[2].ENA
write_enable => v_upper_plus_tmp[3].ENA
write_enable => v_upper_plus_tmp[4].ENA


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
residue_plus[0] => residue_plus[0].IN1
residue_plus[1] => residue_plus[1].IN1
residue_plus[2] => residue_plus[2].IN1
residue_plus[3] => residue_plus[3].IN1
residue_minus[0] => residue_minus[0].IN1
residue_minus[1] => residue_minus[1].IN1
residue_minus[2] => residue_minus[2].IN1
residue_minus[3] => residue_minus[3].IN1
results_plus[0] <= four_bits_adder:adder2.port4
results_plus[1] <= four_bits_adder:adder2.port4
results_plus[2] <= four_bits_adder:adder2.port4
results_plus[3] <= four_bits_adder:adder2.port4
results_minus[0] <= four_bits_adder:adder2.port5
results_minus[1] <= four_bits_adder:adder2.port5
results_minus[2] <= four_bits_adder:adder2.port5
results_minus[3] <= four_bits_adder:adder2.port5
cin_one[0] => cin_one[0].IN1
cin_one[1] => cin_one[1].IN1
cin_two[0] => cin_two[0].IN1
cin_two[1] => cin_two[1].IN1
cout_one[0] <= four_bits_adder:adder1.port7
cout_one[1] <= four_bits_adder:adder1.port7
cout_two[0] <= four_bits_adder:adder2.port7
cout_two[1] <= four_bits_adder:adder2.port7


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|four_bits_parallel_adder:adder1|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|D_FF_two_bits:D2
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|D_FF_two_bits:D3
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|M_block:M
sample_plus[0] => Add0.IN8
sample_plus[1] => Add0.IN7
sample_plus[2] => Add0.IN6
sample_plus[3] => Add0.IN5
sample_minus[0] => Add0.IN4
sample_minus[1] => Add0.IN3
sample_minus[2] => Add0.IN2
sample_minus[3] => Add0.IN1
P_value[0] => w_value.IN0
P_value[1] => w_value.IN1
upper_bits_plus[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
upper_bits_plus[1] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
upper_bits_plus[2] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
upper_bits_minus[0] <= <GND>
upper_bits_minus[1] <= <GND>
upper_bits_minus[2] <= <GND>


|Newton_method|Multiplier_four:mul4|Adder_control_logic:adder_control_logic|v_value_ram:v_ram
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.we_a.DATAIN
we => mem.WE
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
q[2] <= mem.DATAOUT2
q[3] <= mem.DATAOUT3
q[4] <= mem.DATAOUT4
q[5] <= mem.DATAOUT5
q[6] <= mem.DATAOUT6
q[7] <= mem.DATAOUT7


|Newton_method|Multiplier_four:mul4|Sample_V:Sample
positive_vec[0] => Add0.IN18
positive_vec[1] => Add0.IN17
positive_vec[2] => Add0.IN16
positive_vec[3] => Add0.IN15
positive_vec[4] => Add0.IN14
positive_vec[5] => Add0.IN13
positive_vec[6] => Add0.IN12
positive_vec[7] => Add0.IN11
positive_vec[8] => Add0.IN10
negative_vec[0] => Add0.IN9
negative_vec[1] => Add0.IN8
negative_vec[2] => Add0.IN7
negative_vec[3] => Add0.IN6
negative_vec[4] => Add0.IN5
negative_vec[5] => Add0.IN4
negative_vec[6] => Add0.IN3
negative_vec[7] => Add0.IN2
negative_vec[8] => Add0.IN1
sample_for_P[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
sample_for_P[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
sample_for_P[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|Multiplier_four:mul4|Selection:V_block
in[0] => Decoder0.IN2
in[1] => Decoder0.IN1
in[2] => Decoder0.IN0
out[0] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2
clk => clk.IN6
x_value[0] => x_reg_one.DATAB
x_value[1] => x_reg_one.DATAB
d_value[0] => d_reg_one.DATAB
d_value[1] => d_reg_one.DATAB
STATE[0] <= STATE[0].DB_MAX_OUTPUT_PORT_TYPE
STATE[1] <= STATE[1].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[0] <= cnt_master[0].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[1] <= cnt_master[1].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[2] <= cnt_master[2].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[3] <= cnt_master[3].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[4] <= cnt_master[4].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[5] <= cnt_master[5].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[6] <= cnt_master[6].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[7] <= cnt_master[7].DB_MAX_OUTPUT_PORT_TYPE
cnt_master[8] <= cnt_master[8].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[0] <= computation_cycle[0].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[1] <= computation_cycle[1].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[2] <= computation_cycle[2].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[3] <= computation_cycle[3].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[4] <= computation_cycle[4].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[5] <= computation_cycle[5].DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[6] <= computation_cycle[6].DB_MAX_OUTPUT_PORT_TYPE
q_value[0] <= q_value[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q_value[1] <= q_value[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_input <= enable_input.DB_MAX_OUTPUT_PORT_TYPE
fixing_dis <= fixing.DB_MAX_OUTPUT_PORT_TYPE
In_vd => always1.IN1
In_vd => always1.IN1
In_rd <= In_rd~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_vd <= Out_vd~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_rd => always1.IN1


|Newton_method|On_line_divider_stage_two:divider2|counter:count
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
enable => cnt.OUTPUTSELECT
clk => cnt[0]~reg0.CLK
clk => cnt[1]~reg0.CLK
clk => cnt[2]~reg0.CLK
clk => cnt[3]~reg0.CLK
clk => cnt[4]~reg0.CLK
clk => cnt[5]~reg0.CLK
clk => cnt[6]~reg0.CLK
clk => cnt[7]~reg0.CLK
clk => cnt[8]~reg0.CLK
cnt[0] <= cnt[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[1] <= cnt[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[2] <= cnt[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[3] <= cnt[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[4] <= cnt[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[5] <= cnt[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[6] <= cnt[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[7] <= cnt[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cnt[8] <= cnt[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => cnt[0]~reg0.ENA
write_enable => cnt[1]~reg0.ENA
write_enable => cnt[2]~reg0.ENA
write_enable => cnt[3]~reg0.ENA
write_enable => cnt[4]~reg0.ENA
write_enable => cnt[5]~reg0.ENA
write_enable => cnt[6]~reg0.ENA
write_enable => cnt[7]~reg0.ENA
write_enable => cnt[8]~reg0.ENA


|Newton_method|On_line_divider_stage_two:divider2|computation_control:FSM
cnt_master[0] => Equal2.IN1
cnt_master[0] => Equal3.IN8
cnt_master[0] => Equal6.IN1
cnt_master[1] => Equal2.IN0
cnt_master[1] => Equal3.IN7
cnt_master[1] => Equal6.IN0
cnt_master[2] => Add0.IN14
cnt_master[2] => computation_cycle.DATAB
cnt_master[2] => computation_cycle.DATAB
cnt_master[2] => Add2.IN14
cnt_master[2] => computation_cycle.DATAA
cnt_master[2] => Equal3.IN6
cnt_master[2] => Equal7.IN6
cnt_master[3] => Add0.IN13
cnt_master[3] => computation_cycle.DATAB
cnt_master[3] => computation_cycle.DATAB
cnt_master[3] => Add2.IN13
cnt_master[3] => computation_cycle.DATAA
cnt_master[3] => Equal3.IN5
cnt_master[3] => Equal7.IN5
cnt_master[4] => Add0.IN12
cnt_master[4] => computation_cycle.DATAB
cnt_master[4] => computation_cycle.DATAB
cnt_master[4] => Add2.IN12
cnt_master[4] => computation_cycle.DATAA
cnt_master[4] => Equal3.IN4
cnt_master[4] => Equal7.IN4
cnt_master[5] => Add0.IN11
cnt_master[5] => computation_cycle.DATAB
cnt_master[5] => computation_cycle.DATAB
cnt_master[5] => Add2.IN11
cnt_master[5] => computation_cycle.DATAA
cnt_master[5] => Equal3.IN3
cnt_master[5] => Equal7.IN3
cnt_master[6] => Add0.IN10
cnt_master[6] => computation_cycle.DATAB
cnt_master[6] => computation_cycle.DATAB
cnt_master[6] => Add2.IN10
cnt_master[6] => computation_cycle.DATAA
cnt_master[6] => Equal3.IN2
cnt_master[6] => Equal7.IN2
cnt_master[7] => Add0.IN9
cnt_master[7] => computation_cycle.DATAB
cnt_master[7] => computation_cycle.DATAB
cnt_master[7] => Add2.IN9
cnt_master[7] => computation_cycle.DATAA
cnt_master[7] => Equal3.IN1
cnt_master[7] => Equal7.IN1
cnt_master[8] => Add0.IN8
cnt_master[8] => computation_cycle.DATAB
cnt_master[8] => computation_cycle.DATAB
cnt_master[8] => Add2.IN8
cnt_master[8] => computation_cycle.DATAA
cnt_master[8] => Equal3.IN0
cnt_master[8] => Equal7.IN0
clk => fixing~reg0.CLK
clk => we~reg0.CLK
clk => computation_cycle[0]~reg0.CLK
clk => computation_cycle[1]~reg0.CLK
clk => computation_cycle[2]~reg0.CLK
clk => computation_cycle[3]~reg0.CLK
clk => computation_cycle[4]~reg0.CLK
clk => computation_cycle[5]~reg0.CLK
clk => computation_cycle[6]~reg0.CLK
clk => STATE[0]~reg0.CLK
clk => STATE[1]~reg0.CLK
clk => q_previous[0]~reg0.CLK
clk => q_previous[1]~reg0.CLK
computation_cycle[0] <= computation_cycle[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[1] <= computation_cycle[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[2] <= computation_cycle[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[3] <= computation_cycle[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[4] <= computation_cycle[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[5] <= computation_cycle[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
computation_cycle[6] <= computation_cycle[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_for_input <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
we <= we~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[0] <= STATE[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[1] <= STATE[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q_value[0] => Equal1.IN1
q_value[0] => q_previous[0]~reg0.DATAIN
q_value[1] => Equal1.IN0
q_value[1] => q_previous[1]~reg0.DATAIN
error_flag <= error_flag.DB_MAX_OUTPUT_PORT_TYPE
fixing <= fixing~reg0.DB_MAX_OUTPUT_PORT_TYPE
q_previous[0] <= q_previous[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q_previous[1] <= q_previous[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
write_enable => we~reg0.ENA
write_enable => fixing~reg0.ENA
write_enable => q_previous[0]~reg0.ENA
write_enable => computation_cycle[0]~reg0.ENA
write_enable => computation_cycle[1]~reg0.ENA
write_enable => computation_cycle[2]~reg0.ENA
write_enable => computation_cycle[3]~reg0.ENA
write_enable => computation_cycle[4]~reg0.ENA
write_enable => computation_cycle[5]~reg0.ENA
write_enable => computation_cycle[6]~reg0.ENA
write_enable => STATE[0]~reg0.ENA
write_enable => STATE[1]~reg0.ENA
write_enable => q_previous[1]~reg0.ENA


|Newton_method|On_line_divider_stage_two:divider2|generate_CA_REG:CA_REG
STATE[0] => Equal2.IN1
STATE[0] => Equal10.IN1
STATE[0] => Equal11.IN1
STATE[0] => Equal13.IN1
STATE[0] => Equal15.IN1
STATE[1] => Equal2.IN0
STATE[1] => Equal10.IN0
STATE[1] => Equal11.IN0
STATE[1] => Equal13.IN0
STATE[1] => Equal15.IN0
rd_addr[0] => addr_p_read[0].IN1
rd_addr[1] => addr_p_read[1].IN1
rd_addr[2] => addr_p_read[2].IN1
rd_addr[3] => addr_p_read[3].IN1
rd_addr[4] => addr_p_read[4].IN1
rd_addr[5] => addr_p_read[5].IN1
rd_addr[6] => addr_p_read[6].IN1
computation_cycles[0] => Equal3.IN6
computation_cycles[0] => Equal16.IN6
computation_cycles[1] => Equal3.IN5
computation_cycles[1] => Equal16.IN5
computation_cycles[2] => Equal3.IN4
computation_cycles[2] => Equal16.IN4
computation_cycles[3] => Equal3.IN3
computation_cycles[3] => Equal16.IN3
computation_cycles[4] => Equal3.IN2
computation_cycles[4] => Equal16.IN2
computation_cycles[5] => Equal3.IN1
computation_cycles[5] => Equal16.IN1
computation_cycles[6] => Equal3.IN0
computation_cycles[6] => Equal16.IN0
x_input[0] => x_input[0].IN4
x_input[1] => x_input[1].IN4
p_input[0] => tmp_write_data_p.DATAB
p_input[0] => tmp_write_data_p.DATAB
p_input[0] => tmp_write_data_p.DATAB
p_input[0] => tmp_write_data_p.DATAB
p_input[1] => tmp_write_data_p.DATAB
p_input[1] => tmp_write_data_p.DATAB
p_input[1] => tmp_write_data_p.DATAB
p_input[1] => tmp_write_data_p.DATAB
x_plus[0] <= single_clk_ram_2bit:ram4.port5
x_plus[1] <= single_clk_ram_2bit:ram3.port5
x_plus[2] <= single_clk_ram_2bit:ram2.port5
x_plus[3] <= single_clk_ram_2bit:ram1.port5
x_minus[0] <= single_clk_ram_2bit:ram4.port5
x_minus[1] <= single_clk_ram_2bit:ram3.port5
x_minus[2] <= single_clk_ram_2bit:ram2.port5
x_minus[3] <= single_clk_ram_2bit:ram1.port5
p_plus[0] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_plus[1] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_plus[2] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_plus[3] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_minus[0] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_minus[1] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_minus[2] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
p_minus[3] <= tmp_data_p.DB_MAX_OUTPUT_PORT_TYPE
clk => clk.IN5
cnt[0] => LessThan0.IN18
cnt[0] => LessThan1.IN18
cnt[0] => LessThan2.IN18
cnt[0] => LessThan3.IN18
cnt[0] => Decoder1.IN0
cnt[0] => Decoder2.IN0
cnt[0] => Decoder3.IN0
cnt[0] => Decoder4.IN0
cnt[0] => Equal6.IN3
cnt[0] => Equal7.IN3
cnt[0] => Equal0.IN1
cnt[0] => Equal1.IN8
cnt[0] => Equal4.IN1
cnt[0] => Equal5.IN8
cnt[0] => Equal14.IN1
cnt[1] => Add0.IN16
cnt[1] => LessThan0.IN17
cnt[1] => LessThan1.IN17
cnt[1] => LessThan2.IN17
cnt[1] => LessThan3.IN17
cnt[1] => Equal6.IN2
cnt[1] => Equal7.IN2
cnt[1] => Equal0.IN0
cnt[1] => Equal1.IN7
cnt[1] => Equal4.IN0
cnt[1] => Equal5.IN0
cnt[1] => Equal14.IN0
cnt[2] => Add0.IN15
cnt[2] => LessThan0.IN16
cnt[2] => LessThan1.IN16
cnt[2] => LessThan2.IN16
cnt[2] => LessThan3.IN16
cnt[2] => Equal0.IN8
cnt[2] => Equal1.IN0
cnt[2] => Equal5.IN7
cnt[3] => Add0.IN14
cnt[3] => LessThan0.IN15
cnt[3] => LessThan1.IN15
cnt[3] => LessThan2.IN15
cnt[3] => LessThan3.IN15
cnt[3] => Equal0.IN7
cnt[3] => Equal1.IN6
cnt[3] => Equal5.IN6
cnt[4] => Add0.IN13
cnt[4] => LessThan0.IN14
cnt[4] => LessThan1.IN14
cnt[4] => LessThan2.IN14
cnt[4] => LessThan3.IN14
cnt[4] => Equal0.IN6
cnt[4] => Equal1.IN5
cnt[4] => Equal5.IN5
cnt[5] => Add0.IN12
cnt[5] => LessThan0.IN13
cnt[5] => LessThan1.IN13
cnt[5] => LessThan2.IN13
cnt[5] => LessThan3.IN13
cnt[5] => Equal0.IN5
cnt[5] => Equal1.IN4
cnt[5] => Equal5.IN4
cnt[6] => Add0.IN11
cnt[6] => LessThan0.IN12
cnt[6] => LessThan1.IN12
cnt[6] => LessThan2.IN12
cnt[6] => LessThan3.IN12
cnt[6] => Equal0.IN4
cnt[6] => Equal1.IN3
cnt[6] => Equal5.IN3
cnt[7] => Add0.IN10
cnt[7] => LessThan0.IN11
cnt[7] => LessThan1.IN11
cnt[7] => LessThan2.IN11
cnt[7] => LessThan3.IN11
cnt[7] => Equal0.IN3
cnt[7] => Equal1.IN2
cnt[7] => Equal5.IN2
cnt[8] => Add0.IN9
cnt[8] => LessThan0.IN10
cnt[8] => LessThan1.IN10
cnt[8] => LessThan2.IN10
cnt[8] => LessThan3.IN10
cnt[8] => Equal0.IN2
cnt[8] => Equal1.IN1
cnt[8] => Equal5.IN1
error_flag => start_p.OUTPUTSELECT
error_flag => clear.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
error_flag => cnt_p.OUTPUTSELECT
we => ~NO_FANOUT~
d_upper_plus[0] <= d_upper_plus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d_upper_plus[1] <= d_upper_plus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d_upper_minus[0] <= d_upper_minus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d_upper_minus[1] <= d_upper_minus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
fixing => ~NO_FANOUT~
write_enable => write_enable.IN5


|Newton_method|On_line_divider_stage_two:divider2|generate_CA_REG:CA_REG|single_clk_ram:ram_p
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
q[2] <= mem.DATAOUT2
q[3] <= mem.DATAOUT3
q[4] <= mem.DATAOUT4
q[5] <= mem.DATAOUT5
q[6] <= mem.DATAOUT6
q[7] <= mem.DATAOUT7
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|On_line_divider_stage_two:divider2|generate_CA_REG:CA_REG|single_clk_ram_2bit:ram1
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|On_line_divider_stage_two:divider2|generate_CA_REG:CA_REG|single_clk_ram_2bit:ram2
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|On_line_divider_stage_two:divider2|generate_CA_REG:CA_REG|single_clk_ram_2bit:ram3
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|On_line_divider_stage_two:divider2|generate_CA_REG:CA_REG|single_clk_ram_2bit:ram4
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|On_line_divider_stage_two:divider2|SDVM:selector1
vec_in_plus[0] => Mux3.IN3
vec_in_plus[0] => Mux3.IN2
vec_in_plus[1] => Mux2.IN3
vec_in_plus[1] => Mux2.IN2
vec_in_plus[2] => Mux1.IN3
vec_in_plus[2] => Mux1.IN2
vec_in_plus[3] => Mux0.IN3
vec_in_plus[3] => Mux0.IN2
vec_in_minus[0] => Mux7.IN3
vec_in_minus[0] => Mux7.IN2
vec_in_minus[1] => Mux6.IN3
vec_in_minus[1] => Mux6.IN2
vec_in_minus[2] => Mux5.IN3
vec_in_minus[2] => Mux5.IN2
vec_in_minus[3] => Mux4.IN3
vec_in_minus[3] => Mux4.IN2
digit_select[0] => Mux0.IN5
digit_select[0] => Mux1.IN5
digit_select[0] => Mux2.IN5
digit_select[0] => Mux3.IN5
digit_select[0] => Mux4.IN5
digit_select[0] => Mux5.IN5
digit_select[0] => Mux6.IN5
digit_select[0] => Mux7.IN5
digit_select[1] => Mux0.IN4
digit_select[1] => Mux1.IN4
digit_select[1] => Mux2.IN4
digit_select[1] => Mux3.IN4
digit_select[1] => Mux4.IN4
digit_select[1] => Mux5.IN4
digit_select[1] => Mux6.IN4
digit_select[1] => Mux7.IN4
vec_out_plus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
write_enable => ~NO_FANOUT~


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder1
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder1|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder1|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder1|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder1|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|D_FF_two_bits:D2
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
enable => out[0]~reg0.ENA
enable => out[1]~reg0.ENA


|Newton_method|On_line_divider_stage_two:divider2|V_value_logic:adder1_logic
cnt_master_dis[0] => Equal5.IN8
cnt_master_dis[0] => Equal6.IN1
cnt_master_dis[1] => Equal5.IN7
cnt_master_dis[1] => Equal6.IN0
cnt_master_dis[2] => Equal5.IN0
cnt_master_dis[2] => Equal6.IN8
cnt_master_dis[3] => Equal5.IN6
cnt_master_dis[3] => Equal6.IN7
cnt_master_dis[4] => Equal5.IN5
cnt_master_dis[4] => Equal6.IN6
cnt_master_dis[5] => Equal5.IN4
cnt_master_dis[5] => Equal6.IN5
cnt_master_dis[6] => Equal5.IN3
cnt_master_dis[6] => Equal6.IN4
cnt_master_dis[7] => Equal5.IN2
cnt_master_dis[7] => Equal6.IN3
cnt_master_dis[8] => Equal5.IN1
cnt_master_dis[8] => Equal6.IN2
x_value[0] => Add1.IN5
x_value[1] => Add0.IN5
v_plus[0] => LessThan0.IN4
v_plus[0] => Add4.IN8
v_plus[0] => v_plus_new[0].DATAIN
v_plus[1] => LessThan0.IN3
v_plus[1] => Add4.IN7
v_plus[1] => v_plus_new[1].DATAIN
v_plus[2] => Add0.IN4
v_plus[2] => v_plus_new.DATAA
v_plus[3] => Add0.IN3
v_plus[3] => v_plus_new.DATAA
v_minus[0] => LessThan0.IN8
v_minus[0] => LessThan1.IN8
v_minus[0] => v_minus_new[0].DATAIN
v_minus[1] => LessThan0.IN7
v_minus[1] => LessThan1.IN7
v_minus[1] => v_minus_new[1].DATAIN
v_minus[2] => Add1.IN4
v_minus[2] => v_minus_new.DATAA
v_minus[3] => Add1.IN3
v_minus[3] => v_minus_new.DATAA
v_plus_new[0] <= v_plus[0].DB_MAX_OUTPUT_PORT_TYPE
v_plus_new[1] <= v_plus[1].DB_MAX_OUTPUT_PORT_TYPE
v_plus_new[2] <= v_plus_new.DB_MAX_OUTPUT_PORT_TYPE
v_plus_new[3] <= v_plus_new.DB_MAX_OUTPUT_PORT_TYPE
v_minus_new[0] <= v_minus[0].DB_MAX_OUTPUT_PORT_TYPE
v_minus_new[1] <= v_minus[1].DB_MAX_OUTPUT_PORT_TYPE
v_minus_new[2] <= v_minus_new.DB_MAX_OUTPUT_PORT_TYPE
v_minus_new[3] <= v_minus_new.DB_MAX_OUTPUT_PORT_TYPE
clk => borrow_stored.CLK
clk => cin[0]~reg0.CLK
clk => cin[1]~reg0.CLK
clk => stay.CLK
cnt_master[0] => Equal2.IN8
cnt_master[0] => Equal3.IN1
cnt_master[1] => Equal2.IN7
cnt_master[1] => Equal3.IN0
cnt_master[2] => Equal2.IN0
cnt_master[3] => Equal2.IN6
cnt_master[4] => Equal2.IN5
cnt_master[5] => Equal2.IN4
cnt_master[6] => Equal2.IN3
cnt_master[7] => Equal2.IN2
cnt_master[8] => Equal2.IN1
computation_cycle[0] => Equal1.IN6
computation_cycle[1] => Equal1.IN5
computation_cycle[2] => Equal1.IN4
computation_cycle[3] => Equal1.IN3
computation_cycle[4] => Equal1.IN2
computation_cycle[5] => Equal1.IN1
computation_cycle[6] => Equal1.IN0
STATE[0] => Mux0.IN5
STATE[0] => Decoder0.IN1
STATE[0] => Equal0.IN0
STATE[0] => Equal4.IN1
STATE[1] => Mux0.IN4
STATE[1] => Decoder0.IN0
STATE[1] => Equal0.IN1
STATE[1] => Equal4.IN0
v_upper_plus[0] => Add2.IN6
v_upper_plus[1] => Add2.IN5
v_upper_plus[2] => Add2.IN4
v_upper_plus[3] => Add2.IN3
v_upper_minus[0] => Add3.IN6
v_upper_minus[1] => Add3.IN5
v_upper_minus[2] => Add3.IN4
v_upper_minus[3] => Add3.IN3
cout[0] => cin.DATAB
cout[0] => Add1.IN6
cout[1] => cin.DATAB
cout[1] => Add0.IN6
v_upper_plus_result[0] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
v_upper_plus_result[1] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
v_upper_plus_result[2] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
v_upper_plus_result[3] <= Add2.DB_MAX_OUTPUT_PORT_TYPE
v_upper_minus_result[0] <= Add3.DB_MAX_OUTPUT_PORT_TYPE
v_upper_minus_result[1] <= Add3.DB_MAX_OUTPUT_PORT_TYPE
v_upper_minus_result[2] <= Add3.DB_MAX_OUTPUT_PORT_TYPE
v_upper_minus_result[3] <= Add3.DB_MAX_OUTPUT_PORT_TYPE
cin[0] <= cin[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cin[1] <= cin[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
borrower_up <= borrower_up.DB_MAX_OUTPUT_PORT_TYPE
write_enable => stay.ENA
write_enable => cin[1]~reg0.ENA
write_enable => borrow_stored.ENA
write_enable => cin[0]~reg0.ENA
carry_feedback <= carry_feedback.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|SDVM:selector2
vec_in_plus[0] => Mux3.IN3
vec_in_plus[0] => Mux3.IN2
vec_in_plus[1] => Mux2.IN3
vec_in_plus[1] => Mux2.IN2
vec_in_plus[2] => Mux1.IN3
vec_in_plus[2] => Mux1.IN2
vec_in_plus[3] => Mux0.IN3
vec_in_plus[3] => Mux0.IN2
vec_in_minus[0] => Mux7.IN3
vec_in_minus[0] => Mux7.IN2
vec_in_minus[1] => Mux6.IN3
vec_in_minus[1] => Mux6.IN2
vec_in_minus[2] => Mux5.IN3
vec_in_minus[2] => Mux5.IN2
vec_in_minus[3] => Mux4.IN3
vec_in_minus[3] => Mux4.IN2
digit_select[0] => Mux0.IN5
digit_select[0] => Mux1.IN5
digit_select[0] => Mux2.IN5
digit_select[0] => Mux3.IN5
digit_select[0] => Mux4.IN5
digit_select[0] => Mux5.IN5
digit_select[0] => Mux6.IN5
digit_select[0] => Mux7.IN5
digit_select[1] => Mux0.IN4
digit_select[1] => Mux1.IN4
digit_select[1] => Mux2.IN4
digit_select[1] => Mux3.IN4
digit_select[1] => Mux4.IN4
digit_select[1] => Mux5.IN4
digit_select[1] => Mux6.IN4
digit_select[1] => Mux7.IN4
vec_out_plus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
write_enable => ~NO_FANOUT~


|Newton_method|On_line_divider_stage_two:divider2|V_block:Sample
v_value_upper_plus[0] => Add0.IN8
v_value_upper_plus[1] => Add0.IN7
v_value_upper_plus[2] => Add0.IN6
v_value_upper_plus[3] => Add0.IN5
v_value_upper_minus[0] => Add0.IN4
v_value_upper_minus[1] => Add0.IN3
v_value_upper_minus[2] => Add0.IN2
v_value_upper_minus[3] => Add0.IN1
estimated_q[0] <= estimated_q.DB_MAX_OUTPUT_PORT_TYPE
estimated_q[1] <= estimated_q.DB_MAX_OUTPUT_PORT_TYPE
borrower_up => Add1.IN8
fixing => estimated_q.OUTPUTSELECT
fixing => estimated_q.OUTPUTSELECT
pre_p_value[0] => estimated_q.DATAA
pre_p_value[1] => estimated_q.DATAA


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder2
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder2|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder2|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder2|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|four_bits_adder:adder2|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block
STATE[0] => Mux0.IN4
STATE[0] => Mux1.IN4
STATE[0] => Mux2.IN4
STATE[0] => Mux3.IN4
STATE[0] => Mux4.IN3
STATE[0] => Mux5.IN3
STATE[0] => Mux6.IN3
STATE[0] => Mux7.IN3
STATE[0] => Mux8.IN3
STATE[0] => Mux9.IN3
STATE[0] => Mux10.IN3
STATE[0] => Mux11.IN3
STATE[0] => Mux12.IN5
STATE[0] => Mux13.IN5
STATE[0] => Mux14.IN4
STATE[0] => Mux15.IN4
STATE[0] => Mux16.IN4
STATE[0] => Mux17.IN4
STATE[0] => Mux18.IN4
STATE[0] => Mux19.IN4
STATE[0] => Mux20.IN4
STATE[0] => Mux21.IN4
STATE[0] => Decoder0.IN1
STATE[0] => Equal4.IN1
STATE[0] => Equal5.IN1
STATE[0] => Equal6.IN0
STATE[0] => Equal8.IN1
STATE[1] => Mux0.IN3
STATE[1] => Mux1.IN3
STATE[1] => Mux2.IN3
STATE[1] => Mux3.IN3
STATE[1] => Mux4.IN2
STATE[1] => Mux5.IN2
STATE[1] => Mux6.IN2
STATE[1] => Mux7.IN2
STATE[1] => Mux8.IN2
STATE[1] => Mux9.IN2
STATE[1] => Mux10.IN2
STATE[1] => Mux11.IN2
STATE[1] => Mux12.IN4
STATE[1] => Mux13.IN4
STATE[1] => Mux14.IN3
STATE[1] => Mux15.IN3
STATE[1] => Mux16.IN3
STATE[1] => Mux17.IN3
STATE[1] => Mux18.IN3
STATE[1] => Mux19.IN3
STATE[1] => Mux20.IN3
STATE[1] => Mux21.IN3
STATE[1] => Decoder0.IN0
STATE[1] => Equal4.IN0
STATE[1] => Equal5.IN0
STATE[1] => Equal6.IN1
STATE[1] => Equal8.IN0
cnt_master[0] => Equal1.IN8
cnt_master[0] => Equal2.IN1
cnt_master[1] => Equal1.IN7
cnt_master[1] => Equal2.IN0
cnt_master[2] => Equal7.IN6
cnt_master[2] => Add0.IN14
cnt_master[2] => Equal1.IN0
cnt_master[3] => Equal7.IN5
cnt_master[3] => Add0.IN13
cnt_master[3] => Equal1.IN6
cnt_master[4] => Equal7.IN4
cnt_master[4] => Add0.IN12
cnt_master[4] => Equal1.IN5
cnt_master[5] => Equal7.IN3
cnt_master[5] => Add0.IN11
cnt_master[5] => Equal1.IN4
cnt_master[6] => Equal7.IN2
cnt_master[6] => Add0.IN10
cnt_master[6] => Equal1.IN3
cnt_master[7] => Equal7.IN1
cnt_master[7] => Add0.IN9
cnt_master[7] => Equal1.IN2
cnt_master[8] => Equal7.IN0
cnt_master[8] => Add0.IN8
cnt_master[8] => Equal1.IN1
computation_cycle[0] => Equal3.IN13
computation_cycle[0] => Equal7.IN13
computation_cycle[0] => Add1.IN14
computation_cycle[0] => wr_addr.DATAA
computation_cycle[0] => Add2.IN14
computation_cycle[0] => rd_addr.DATAA
computation_cycle[0] => rd_addr.DATAB
computation_cycle[0] => Mux21.IN5
computation_cycle[0] => rd_addr.DATAA
computation_cycle[0] => Equal0.IN6
computation_cycle[1] => Equal3.IN12
computation_cycle[1] => Equal7.IN12
computation_cycle[1] => Add1.IN13
computation_cycle[1] => wr_addr.DATAA
computation_cycle[1] => Add2.IN13
computation_cycle[1] => rd_addr.DATAA
computation_cycle[1] => rd_addr.DATAB
computation_cycle[1] => Mux20.IN5
computation_cycle[1] => rd_addr.DATAA
computation_cycle[1] => Equal0.IN5
computation_cycle[2] => Equal3.IN11
computation_cycle[2] => Equal7.IN11
computation_cycle[2] => Add1.IN12
computation_cycle[2] => wr_addr.DATAA
computation_cycle[2] => Add2.IN12
computation_cycle[2] => rd_addr.DATAA
computation_cycle[2] => rd_addr.DATAB
computation_cycle[2] => Mux19.IN5
computation_cycle[2] => rd_addr.DATAA
computation_cycle[2] => Equal0.IN4
computation_cycle[3] => Equal3.IN10
computation_cycle[3] => Equal7.IN10
computation_cycle[3] => Add1.IN11
computation_cycle[3] => wr_addr.DATAA
computation_cycle[3] => Add2.IN11
computation_cycle[3] => rd_addr.DATAA
computation_cycle[3] => rd_addr.DATAB
computation_cycle[3] => Mux18.IN5
computation_cycle[3] => rd_addr.DATAA
computation_cycle[3] => Equal0.IN3
computation_cycle[4] => Equal3.IN9
computation_cycle[4] => Equal7.IN9
computation_cycle[4] => Add1.IN10
computation_cycle[4] => wr_addr.DATAA
computation_cycle[4] => Add2.IN10
computation_cycle[4] => rd_addr.DATAA
computation_cycle[4] => rd_addr.DATAB
computation_cycle[4] => Mux17.IN5
computation_cycle[4] => rd_addr.DATAA
computation_cycle[4] => Equal0.IN2
computation_cycle[5] => Equal3.IN8
computation_cycle[5] => Equal7.IN8
computation_cycle[5] => Add1.IN9
computation_cycle[5] => wr_addr.DATAA
computation_cycle[5] => Add2.IN9
computation_cycle[5] => rd_addr.DATAA
computation_cycle[5] => rd_addr.DATAB
computation_cycle[5] => Mux16.IN5
computation_cycle[5] => rd_addr.DATAA
computation_cycle[5] => Equal0.IN1
computation_cycle[6] => Equal3.IN7
computation_cycle[6] => Equal7.IN7
computation_cycle[6] => Add1.IN8
computation_cycle[6] => wr_addr.DATAA
computation_cycle[6] => Add2.IN8
computation_cycle[6] => rd_addr.DATAA
computation_cycle[6] => rd_addr.DATAB
computation_cycle[6] => Mux15.IN5
computation_cycle[6] => rd_addr.DATAA
computation_cycle[6] => Equal0.IN0
clk => clk.IN1
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => wr_addr.OUTPUTSELECT
carry_feedback => Mux14.IN5
v_upper_plus[0] => v_upper_plus[0].IN1
v_upper_plus[1] => v_upper_plus[1].IN1
v_upper_plus[2] => v_upper_plus[2].IN1
v_upper_plus[3] => v_upper_plus[3].IN1
v_upper_minus[0] => v_upper_minus[0].IN1
v_upper_minus[1] => v_upper_minus[1].IN1
v_upper_minus[2] => v_upper_minus[2].IN1
v_upper_minus[3] => v_upper_minus[3].IN1
d_plus_selected[0] => d_plus_controlled.DATAB
d_plus_selected[0] => d_plus_controlled.DATAA
d_plus_selected[0] => d_plus_controlled.DATAB
d_plus_selected[0] => Mux7.IN4
d_plus_selected[0] => Mux7.IN5
d_plus_selected[1] => d_plus_controlled.DATAB
d_plus_selected[1] => d_plus_controlled.DATAA
d_plus_selected[1] => d_plus_controlled.DATAB
d_plus_selected[1] => Mux6.IN4
d_plus_selected[1] => Mux6.IN5
d_plus_selected[2] => d_plus_controlled.DATAB
d_plus_selected[2] => d_plus_controlled.DATAA
d_plus_selected[2] => d_plus_controlled.DATAB
d_plus_selected[2] => Mux5.IN4
d_plus_selected[2] => Mux5.IN5
d_plus_selected[3] => d_plus_controlled.DATAB
d_plus_selected[3] => d_plus_controlled.DATAA
d_plus_selected[3] => d_plus_controlled.DATAB
d_plus_selected[3] => Mux4.IN4
d_plus_selected[3] => Mux4.IN5
d_minus_selected[0] => d_minus_controlled.DATAB
d_minus_selected[0] => d_minus_controlled.DATAA
d_minus_selected[0] => d_minus_controlled.DATAB
d_minus_selected[0] => Mux11.IN4
d_minus_selected[0] => Mux11.IN5
d_minus_selected[1] => d_minus_controlled.DATAB
d_minus_selected[1] => d_minus_controlled.DATAA
d_minus_selected[1] => d_minus_controlled.DATAB
d_minus_selected[1] => Mux10.IN4
d_minus_selected[1] => Mux10.IN5
d_minus_selected[2] => d_minus_controlled.DATAB
d_minus_selected[2] => d_minus_controlled.DATAA
d_minus_selected[2] => d_minus_controlled.DATAB
d_minus_selected[2] => Mux9.IN4
d_minus_selected[2] => Mux9.IN5
d_minus_selected[3] => d_minus_controlled.DATAB
d_minus_selected[3] => d_minus_controlled.DATAA
d_minus_selected[3] => d_minus_controlled.DATAB
d_minus_selected[3] => Mux8.IN4
d_minus_selected[3] => Mux8.IN5
w_plus_res[0] => w_plus_shifted.DATAB
w_plus_res[0] => w_plus_shifted.DATAA
w_plus_res[0] => w_plus_shifted.DATAB
w_plus_res[1] => w_plus_shifted.DATAB
w_plus_res[1] => w_plus_shifted.DATAA
w_plus_res[1] => w_plus_shifted.DATAB
w_plus_res[2] => w_plus_shifted.DATAB
w_plus_res[2] => w_plus_shifted.DATAA
w_plus_res[2] => w_plus_shifted.DATAB
w_plus_res[3] => w_plus_shifted.DATAA
w_plus_res[3] => tmp_shift_out.DATAB
w_plus_res[3] => tmp_shift_out[1].DATAB
w_minus_res[0] => w_minus_shifted.DATAB
w_minus_res[0] => w_minus_shifted.DATAA
w_minus_res[0] => w_minus_shifted.DATAB
w_minus_res[1] => w_minus_shifted.DATAB
w_minus_res[1] => w_minus_shifted.DATAA
w_minus_res[1] => w_minus_shifted.DATAB
w_minus_res[2] => w_minus_shifted.DATAB
w_minus_res[2] => w_minus_shifted.DATAA
w_minus_res[2] => w_minus_shifted.DATAB
w_minus_res[3] => w_minus_shifted.DATAA
w_minus_res[3] => tmp_shift_out.DATAB
w_minus_res[3] => tmp_shift_out[0].DATAB
d_plus_controlled[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
d_plus_controlled[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
d_plus_controlled[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
d_plus_controlled[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
d_minus_controlled[0] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
d_minus_controlled[1] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
d_minus_controlled[2] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
d_minus_controlled[3] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
residue_plus[0] <= w_value_ram:w_ram.port5
residue_plus[1] <= w_value_ram:w_ram.port5
residue_plus[2] <= w_value_ram:w_ram.port5
residue_plus[3] <= w_value_ram:w_ram.port5
residue_minus[0] <= w_value_ram:w_ram.port5
residue_minus[1] <= w_value_ram:w_ram.port5
residue_minus[2] <= w_value_ram:w_ram.port5
residue_minus[3] <= w_value_ram:w_ram.port5
res_upper_plus[0] <= res_upper_plus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_plus[1] <= res_upper_plus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_plus[2] <= res_upper_plus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_plus[3] <= res_upper_plus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_minus[0] <= res_upper_minus[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_minus[1] <= res_upper_minus[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_minus[2] <= res_upper_minus[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res_upper_minus[3] <= res_upper_minus[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cout_two[0] => cin_two.DATAB
cout_two[0] => cin_three.DATAB
cout_two[1] => cin_two.DATAB
cout_two[1] => cin_three.DATAB
cin_two[0] <= cin_two[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cin_two[1] <= cin_two[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_addr[0] <= rd_addr[0].DB_MAX_OUTPUT_PORT_TYPE
rd_addr[1] <= rd_addr[1].DB_MAX_OUTPUT_PORT_TYPE
rd_addr[2] <= rd_addr[2].DB_MAX_OUTPUT_PORT_TYPE
rd_addr[3] <= rd_addr[3].DB_MAX_OUTPUT_PORT_TYPE
rd_addr[4] <= rd_addr[4].DB_MAX_OUTPUT_PORT_TYPE
rd_addr[5] <= rd_addr[5].DB_MAX_OUTPUT_PORT_TYPE
rd_addr[6] <= rd_addr[6].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[0] <= wr_addr[0].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[1] <= wr_addr[1].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[2] <= wr_addr[2].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[3] <= wr_addr[3].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[4] <= wr_addr[4].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[5] <= wr_addr[5].DB_MAX_OUTPUT_PORT_TYPE
wr_addr[6] <= wr_addr[6].DB_MAX_OUTPUT_PORT_TYPE
d_upper_plus[0] => d_upper_plus[0].IN1
d_upper_plus[1] => d_upper_plus[1].IN1
d_upper_minus[0] => d_upper_minus[0].IN1
d_upper_minus[1] => d_upper_minus[1].IN1
q_value[0] => _.IN1
q_value[1] => _.IN1
error_flag => res_upper_plus.OUTPUTSELECT
error_flag => res_upper_plus.OUTPUTSELECT
error_flag => res_upper_plus.OUTPUTSELECT
error_flag => res_upper_plus.OUTPUTSELECT
error_flag => res_upper_minus.OUTPUTSELECT
error_flag => res_upper_minus.OUTPUTSELECT
error_flag => res_upper_minus.OUTPUTSELECT
error_flag => res_upper_minus.OUTPUTSELECT
error_flag => Mux14.IN1
write_enable => write_enable.IN1


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|SDVM_3bit:selector3
vec_in_plus[0] => Mux1.IN3
vec_in_plus[0] => Mux1.IN2
vec_in_plus[1] => Mux0.IN3
vec_in_plus[1] => Mux0.IN2
vec_in_minus[0] => Mux3.IN3
vec_in_minus[0] => Mux3.IN2
vec_in_minus[1] => Mux2.IN3
vec_in_minus[1] => Mux2.IN2
digit_select[0] => Mux0.IN5
digit_select[0] => Mux1.IN5
digit_select[0] => Mux2.IN5
digit_select[0] => Mux3.IN5
digit_select[1] => Mux0.IN4
digit_select[1] => Mux1.IN4
digit_select[1] => Mux2.IN4
digit_select[1] => Mux3.IN4
vec_out_plus[0] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
vec_out_plus[1] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
vec_out_minus[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|six_bits_adder:adder
x_plus[0] => x_plus[0].IN1
x_plus[1] => x_plus[1].IN1
x_plus[2] => x_plus[2].IN1
x_plus[3] => x_plus[3].IN1
x_minus[0] => x_minus[0].IN1
x_minus[1] => x_minus[1].IN1
x_minus[2] => x_minus[2].IN1
x_minus[3] => x_minus[3].IN1
y_plus[0] => y_plus[0].IN1
y_plus[1] => y_plus[1].IN1
y_plus[2] => y_plus[2].IN1
y_plus[3] => y_plus[3].IN1
y_minus[0] => y_minus[0].IN1
y_minus[1] => y_minus[1].IN1
y_minus[2] => y_minus[2].IN1
y_minus[3] => y_minus[3].IN1
z_plus[0] <= on_line_adder_block:adder_chain[0].Block.port7
z_plus[1] <= on_line_adder_block:adder_chain[1].Block.port7
z_plus[2] <= on_line_adder_block:adder_chain[2].Block.port7
z_plus[3] <= on_line_adder_block:adder_chain[3].Block.port7
z_minus[0] <= cin[0].DB_MAX_OUTPUT_PORT_TYPE
z_minus[1] <= on_line_adder_block:adder_chain[0].Block.port6
z_minus[2] <= on_line_adder_block:adder_chain[1].Block.port6
z_minus[3] <= on_line_adder_block:adder_chain[2].Block.port6
cin[0] => z_minus[0].DATAIN
cin[1] => cin_vec[0].IN1
cout[0] <= on_line_adder_block:adder_chain[3].Block.port6
cout[1] <= on_line_adder_block:adder_chain[3].Block.port5


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[0].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[0].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[0].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[1].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[1].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[1].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[2].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[2].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[2].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[3].Block
x_plus => x_plus.IN1
x_minus => _.IN1
y_plus => y_plus.IN1
y_minus => _.IN1
cin => cin.IN1
cout <= full_adder:FA1.port3
carry_out <= full_adder:FA2.port3
sum_out <= full_adder:FA2.port4


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[3].Block|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|six_bits_adder:adder|on_line_adder_block:adder_chain[3].Block|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|On_line_divider_stage_two:divider2|w_value_logic_fix:W_block|w_value_ram:w_ram
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7
write_addr[0] => mem.waddr_a[0].DATAIN
write_addr[0] => mem.WADDR
write_addr[1] => mem.waddr_a[1].DATAIN
write_addr[1] => mem.WADDR1
write_addr[2] => mem.waddr_a[2].DATAIN
write_addr[2] => mem.WADDR2
write_addr[3] => mem.waddr_a[3].DATAIN
write_addr[3] => mem.WADDR3
write_addr[4] => mem.waddr_a[4].DATAIN
write_addr[4] => mem.WADDR4
write_addr[5] => mem.waddr_a[5].DATAIN
write_addr[5] => mem.WADDR5
write_addr[6] => mem.waddr_a[6].DATAIN
write_addr[6] => mem.WADDR6
read_addr[0] => addr_reg[0].DATAIN
read_addr[1] => addr_reg[1].DATAIN
read_addr[2] => addr_reg[2].DATAIN
read_addr[3] => addr_reg[3].DATAIN
read_addr[4] => addr_reg[4].DATAIN
read_addr[5] => addr_reg[5].DATAIN
read_addr[6] => addr_reg[6].DATAIN
we => mem.DATAB
clk => mem.we_a.CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => mem.CLK0
q[0] <= mem.DATAOUT
q[1] <= mem.DATAOUT1
q[2] <= mem.DATAOUT2
q[3] <= mem.DATAOUT3
q[4] <= mem.DATAOUT4
q[5] <= mem.DATAOUT5
q[6] <= mem.DATAOUT6
q[7] <= mem.DATAOUT7
write_enable => mem.OUTPUTSELECT
write_enable => addr_reg[0].ENA
write_enable => addr_reg[1].ENA
write_enable => addr_reg[2].ENA
write_enable => addr_reg[3].ENA
write_enable => addr_reg[4].ENA
write_enable => addr_reg[5].ENA
write_enable => addr_reg[6].ENA


|Newton_method|subtraction_four:sub_four
clk => clk.IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
y[0] => inverted_y[0].IN1
y[1] => inverted_y[1].IN1
res[0] <= res[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
res[1] <= res[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
In_vld => always0.IN1
In_rdy <= In_rdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_vld <= Out_vld~reg0.DB_MAX_OUTPUT_PORT_TYPE
Out_rdy => always0.IN1


|Newton_method|subtraction_four:sub_four|On_line_adder:adder
clk => clk.IN5
enable => enable.IN5
x[0] => x_minus_tmp.IN1
x[1] => x_plus.IN1
y[0] => g_in[0].IN1
y[1] => y_plus.IN1
z[0] <= D_flipflop:D4.port2
z[1] <= D_flipflop:D5.port2


|Newton_method|subtraction_four:sub_four|On_line_adder:adder|full_adder:FA1
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|subtraction_four:sub_four|On_line_adder:adder|D_flipflop:D1
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction_four:sub_four|On_line_adder:adder|D_flipflop:D2
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction_four:sub_four|On_line_adder:adder|full_adder:FA2
a => Add0.IN1
b => Add0.IN2
cin => Add1.IN4
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|Newton_method|subtraction_four:sub_four|On_line_adder:adder|D_flipflop:D3
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction_four:sub_four|On_line_adder:adder|D_flipflop:D4
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


|Newton_method|subtraction_four:sub_four|On_line_adder:adder|D_flipflop:D5
clk => out~reg0.CLK
in => out~reg0.DATAIN
out <= out~reg0.DB_MAX_OUTPUT_PORT_TYPE
enable_output => out~reg0.ENA


